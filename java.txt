Java  Program to Multiply given Number by 4 Using Bitwise Operators 
================================ EOPN
Java  Program to Multiply given Number by 4 Using Bitwise Operators 
================================ EOKW
--------------------------------
output:
$ javac Multiply_Bitwise java
$ java Multiply_Bitwise

Enter the number:5
Answer:20
--------------------------------
import java util Scanner;
public class Multiply_Bitwise 
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        n = s nextInt();
        int mul = n << 2;
        System out println("Answer:"+mul);
    }
}
 . 
*******************
Java  Program to Check if a given Bit Position is Set to One or not
================================ EOPN
Java  Program to Check if a given Bit Position is Set to One or not
================================ EOKW
--------------------------------
output:
$ javac Bit_Postion java
$ java Bit_Postion

Enter any Decimal Number:6
Enter the position where you want to check:2
1 is present at given bit position
--------------------------------
import java util Scanner;
public class Bit_Postion 
{
    public static void main(String[] args) 
    {
        int n, m;
        String x = "";
        Scanner s = new Scanner(System in);
        System out print("Enter any Decimal Number:");
        n = s nextInt();
        while(n > 0)
        {
            int a = n % 2;
            x = a + x;
            n = n / 2;
        }
        System out print("Enter the position where you want to check:");
        int l = x length();
        m = s nextInt();
        if((l - m) >= 0 && (x charAt(l - m) == '1'))
        {
            System out println("1 is present at given bit position");
        }
        else
        {
            System out println("0 is present at given bit position");
        }
    }
}
 . 
*******************
Java  Program to Count the Number of Bits Set to One
================================ EOPN
Java  Program to Count the Number of Bits Set to One
================================ EOKW
--------------------------------
output:
$ javac Count_One java
$ java Count_One

Enter the Decimal Number:15
No  of 1's are:4
--------------------------------
import java util Scanner;
public class Count_One 
{
    public static void main(String[] args) 
    {
        int n, m, count = 0;
        String x = "";
        Scanner s = new Scanner(System in);
        System out print("Enter the Decimal Number:");
        n = s nextInt();
        while(n > 0)
        {
            int a = n % 2;
            x = a + x;
            n = n / 2;
        }
        int l = x length();
        for(int i = 0; i < l; i++)
        {
            if(x charAt(i) == '1')
            {
                count++;
            }
        }
        System out println("No  of 1's are:"+count);
    }
}
 . 
*******************
Java  Program to Illustrate  the Use of Various Bitwise Operators
================================ EOPN
Java  Program to Illustrate  the Use of Various Bitwise Operators
================================ EOKW
--------------------------------
output:
$ javac Bitwise_Operation java
$ java Bitwise_Operation

Enter First number:5
Enter Second number:6

Press 1 for Right Shift by 2:
Press 2 for Left Shift by 2:
Press 3 for Bitwise AND:
Press 4 for Bitwise OR by 2:
Press 5 for Bitwise Exclusive OR:
Press 6 for Bitwise NOT:
Press 7 to Exit:

Option:3
Result after bitwise AND:4

Press 1 for Right Shift by 2:
Press 2 for Left Shift by 2:
Press 3 for Bitwise AND:
Press 4 for Bitwise OR by 2:
Press 5 for Bitwise Exclusive OR:
Press 6 for Bitwise NOT:
Press 7 to Exit:

Option:7
--------------------------------
import java util Scanner;
public class Bitwise_Operation 
{
   public static void main(String[] args) 
    {
        int m, n, x, a;
        Scanner s = new Scanner(System in);
        System out print("Enter First number:");
        m = s nextInt();
        System out print("Enter Second number:");
        n = s nextInt();
        while(true)
        {
            System out println("");
            System out println("Press 1 for Right Shift by 2:");
            System out println("Press 2 for Left Shift by 2:");
            System out println("Press 3 for Bitwise AND:");
            System out println("Press 4 for Bitwise OR by 2:");
            System out println("Press 5 for Bitwise Exclusive OR:");
            System out println("Press 6 for Bitwise NOT:");
            System out println("Press 7 to Exit:");
            System out println("");
            System out print("Option:");
            x = s nextInt();
            switch(x)
            {
                case 1:
                a = m << 2;
                System out println("Result after left shift by 2:"+a);
                break;

                case 2:
                a = n >> 2;
                System out println("Result after right shift by 2:"+a);   
                break;

                case 3:
                a = m & n;
                System out println("Result after bitwise AND:"+a);  
                break;

                case 4:  
                a = m | n;
                System out println("Result after bitwise OR:"+a);
                break;

                case 5:
                a = m ^ n;
                System out println("Result after bitwise Exclusive OR:"+a);
                break;    

                case 6:
                a = ~ m;
                System out println("Result after bitwise NOT:"+a);
                break;    

                case 7:
                System exit(0);
            }
        }
     }
}
 . 
*******************
Java  Program to Swap the Contents of Two Numbers Using Bitwise XOR Operation 
================================ EOPN
Java  Program to Swap the Contents of Two Numbers Using Bitwise XOR Operation 
================================ EOKW
--------------------------------
output:
$ javac Swap_BitwiseXOR java
$ java Swap_BitwiseXOR

Enter the first number:6
Enter the second number:7
After Swapping
First number:7
Second number:6
--------------------------------
import java util Scanner;
public class Swap_BitwiseXOR 
{
    public static void main(String args[])
    {
        int m, n;
        Scanner s = new Scanner(System in);
        System out print("Enter the first number:");
        m = s nextInt();
        System out print("Enter the second number:");
        n = s nextInt();
        m = m ^ n;
        n = m ^ n;
        m = m ^ n;
        System out println("After Swapping");
        System out println("First number:"+m);
        System out println("Second number:"+n);
    }
}
 . 
*******************
Java Program to Convert Binary Code of a Number into its Equivalent Grays Code Without Using Recursion
================================ EOPN
Java Program to Convert Binary Code of a Number into its Equivalent Grays Code Without Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Binary_Gray java
$ java Binary_Gray

Enter Binary number:1001
Gray Code:1101
--------------------------------
import static java lang StrictMath pow;
import java util Scanner;
public class Binary_Gray 
{
    public static void main(String[] args) 
    {
        int a, b, x, result = 0, i = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter Binary number:");
        x = s nextInt();
        while(x != 0)
        {
            a = x % 10;
            x = x / 10;
            b = x % 10;
            if((a & ~ b) == 1 || (~ a & b) == 1)
            {
                result = (int) (result + pow(10,i));
            }
            i++;
        }
        System out println("Gray Code:"+result);
    }
}
 . 
*******************
Java  Program to Convert Binary Code of a Number into its Equivalent Grays Code Using Recursion
================================ EOPN
Java  Program to Convert Binary Code of a Number into its Equivalent Grays Code Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Binary_Gray_Recursion java
$ java Binary_Gray_Recursion 

Enter Binary number:1001
Gray Code:1101
--------------------------------
import static java lang StrictMath pow;
import java util Scanner;
public class Binary_Gray_Recursion 
{
    public static void main(String[] args) 
    {
        int n, result = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter Binary number:");
        n = s nextInt();
        Binary_Gray_Recursion obj = new Binary_Gray_Recursion();
        result = obj GrayCode(n, 0);
        System out println("Gray Code:"+result);
    } 
   int GrayCode(int x,int i)
   {
       int a, b, result = 0;
       if(x != 0)
        {
            a = x % 10;
            x = x / 10;
            b = x % 10;
            if((a & ~ b) == 1 || (~ a & b) == 1)
            {
                result = (int) (result + pow(10,i));
            }
            return GrayCode(x, ++i) + result;
        }
       return 0;
   }
}
 . 
*******************
Java Program to Find Sum of Digits of a Number using Recursion
================================ EOPN
Java Program to Find Sum of Digits of a Number using Recursion
================================ EOKW
--------------------------------
output:
$ javac Digit_Sum java
$ java Digit_Sum

Enter the number:345
Sum:12
--------------------------------
import java util Scanner;
public class Digit_Sum 
{
    int sum = 0;
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        n = s nextInt();
        Digit_Sum obj = new Digit_Sum();
        int a = obj add(n);
        System out println("Sum:"+a);
    }
    int add(int n)
    {
        sum = n % 10;
        if(n == 0)
        {
            return 0;
        }
        else
        {
             return sum + add(n / 10);
        }

    }
}
 . 
*******************
Java Program to Find Reverse of a Number Using Recursion
================================ EOPN
Java Program to Find Reverse of a Number Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Reverse_Recursion java
$ java Reverse_Recursion

Enter the number:467
Reverse:764
--------------------------------
import static java lang StrictMath pow;
import java util Scanner;
public class Reverse_Recursion 
{
    public static void main(String[] args) 
    {
        int n, count = 0, m;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        n = s nextInt();
        m = n;
        while(m > 0)
        {
            count++;
            m = m / 10;
        }
        Reverse_Recursion obj = new Reverse_Recursion();
        int a = obj reverse(n, count);
        System out println("Reverse:"+a);
    }
    int reverse(int x, int length)
    {
        if(length == 1)
        {
            return x;
        }
        else
        {
            int b = x % 10;
            x = x / 10;
            return (int) ((b * pow(10, length - 1)) + reverse(x, --length));
        }
    }
}
 . 
*******************
Java Program to Print Binary Equivalent of an Integer using Recursion
================================ EOPN
Java Program to Print Binary Equivalent of an Integer using Recursion
================================ EOKW
--------------------------------
output:
$ javac Binary_Recursion java
$ java Binary_Recursion

Enter the number:19
Answer:11001
--------------------------------
import java util Scanner;
public class Binary_Recursion 
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        n = s nextInt();
        Binary_Recursion obj = new Binary_Recursion();
        String m = obj Binary(n);
        System out println("Answer:"+m);
    }
    String Binary(int x)
    {
        if(x > 0)
        {
            int a = x % 2;
            x = x / 2;
            return a + "" + Binary(x);
        }
        return "";
    }
}
 . 
*******************
Java Program to Find Product of 2 Numbers Using Recursion
================================ EOPN
Java Program to Find Product of 2 Numbers Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Multiply_Recursion java
$ java Multiply_Recursion

Enter the first number:6
Enter the second number:4
Answer:24
--------------------------------
import java util Scanner;
public class Multiply_Recursion 
{
    public static void main(String[] args) 
    {
        int[] a = new int[2];
        Scanner s = new Scanner(System in);
        System out print("Enter the first number:");
        a[0] = s nextInt();
        System out print("Enter the second number:");
        a[1] = s nextInt();
        Multiply_Recursion obj = new Multiply_Recursion();
        int mul = obj multiply(a,0);
        System out println("Answer:"+mul);
    } 
   int multiply(int x[], int i)
    {
        if(i < 2)
        {
            return x[i] * multiply(x, ++i);
        }
        else
        {
            return 1;
        }
    }
}
 . 
*******************
Java Program to Check if a Given Integer is Positive or Negative
================================ EOPN
Java Program to Check if a Given Integer is Positive or Negative
================================ EOKW
--------------------------------
output:
$ javac Postive_Negative java
$ java Postive_Negative

Enter the number you want to check:6
The given number 6 is Positive
--------------------------------
import java util Scanner;
public class Postive_Negative 
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter the number you want to check:");
        n = s nextInt();
        if(n > 0)
        {
            System out println("The given number "+n+" is Positive");
        }
        else if(n < 0)
        {
            System out println("The given number "+n+" is Negative");
        }
        else
        {
            System out println("The given number "+n+" is neither Positive nor Negative ");
        }
    }
}
 . 
*******************
Java Program to Check if a Given Integer is Odd or Even
================================ EOPN
Java Program to Check if a Given Integer is Odd or Even
================================ EOKW
--------------------------------
output:
$ javac Odd_Even java
$ java Odd_Even

Enter the number you want to check:15
The given number 15 is Odd
--------------------------------
import java util Scanner;
public class Odd_Even 
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter the number you want to check:");
        n = s nextInt();
        if(n % 2 == 0)
        {
            System out println("The given number "+n+" is Even ");
        }
        else
        {
            System out println("The given number "+n+" is Odd ");
    }
    }
}
 . 
*******************
Java Program to Find the Biggest of 3 Numbers 
================================ EOPN
Java Program to Find the Biggest of 3 Numbers 
================================ EOKW
--------------------------------
output:
$ javac Biggest_Number java
$ java Biggest_Number

Enter the first number:10
Enter the second number:17
Enter the third number:15
Largest number is:17
--------------------------------
import java util Scanner;
public class Biggest_Number 
{
    public static void main(String[] args) 
    {
        int x, y, z;
        Scanner s = new Scanner(System in);
        System out print("Enter the first number:");
        x = s nextInt();
        System out print("Enter the second number:");
        y = s nextInt();
        System out print("Enter the third number:");
        z = s nextInt();
        if(x > y && x > z)
        {
            System out println("Largest number is:"+x);
        }
        else if(y > z)
        {
            System out println("Largest number is:"+y);
        }
        else
        {
            System out println("Largest number is:"+z);
        }

    }
}
 . 
*******************
Java Program to Calculate the Sum of Odd & Even Numbers 
================================ EOPN
Java Program to Calculate the Sum of Odd & Even Numbers 
================================ EOKW
--------------------------------
output:
$ javac Sum_Odd_Even java
$ java Sum_Odd_Even

Enter the number of elements in array:6
Enter the elements of the array:
1
3
2
6
7
9
Sum of Even Numbers:8
Sum of Odd Numbers:20
--------------------------------
import java util Scanner;
public class Sum_Odd_Even 
{
    public static void main(String[] args) 
    {
        int n, sumE = 0, sumO = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter the number of elements in array:");
        n = s nextInt();
        int[] a = new int[n];
        System out println("Enter the elements of the array:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        for(int i = 0; i < n; i++)
        {
            if(a[i] % 2 == 0)
            {
                sumE = sumE + a[i];
            }
            else
            {
                sumO = sumO + a[i];
            }
        }
        System out println("Sum of Even Numbers:"+sumE);
        System out println("Sum of Odd Numbers:"+sumO);
    }
}
 . 
*******************
Java Program to Read Two Integers M and N & Swap their Values 
================================ EOPN
Java Program to Read Two Integers M and N & Swap their Values 
================================ EOKW
--------------------------------
output:
$ javac Swap_Integers java
$ java Swap_Integers

Enter the first number:5
Enter the second number:7
After Swapping
First number:7
Second number:5
--------------------------------
import java util Scanner;
public class Swap_Integers 
{
    public static void main(String args[])
    {
        int m, n, temp;
        Scanner s = new Scanner(System in);
        System out print("Enter the first number:");
        m = s nextInt();
        System out print("Enter the second number:");
        n = s nextInt();
        temp = m;
        m = n;
        n = temp;
        System out println("After Swapping");
        System out println("First number:"+m);
        System out println("Second number:"+n);
    }
}
 . 
*******************
Java Program to Reverse a Given Number 
================================ EOPN
Java Program to Reverse a Given Number 
================================ EOKW
--------------------------------
output:
$ javac Reverse_Number java
$ java Reverse_Number

Enter the number:567
Reverse:765
--------------------------------
import java util Scanner;
public class Reverse_Number 
{
    public static void main(String args[])
    {
        int m, n, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        m = s nextInt();
        while(m > 0)
        {
            n = m % 10;
            sum = sum * 10 + n;
            m = m / 10;
        }
        System out println("Reverse:"+sum);
    }
}
 . 
*******************
Java Program to Accept two Integers and Check if they are Equal 
================================ EOPN
Java Program to Accept two Integers and Check if they are Equal 
================================ EOKW
--------------------------------
output:
$ javac Equal_Integer java
$ java Equal_Integer

Enter the first number:5
Enter the second number:7
5 and 7 are not equal

Enter the first number:6
Enter the second number:6
6 and 6 are equal
--------------------------------
import java util Scanner;
public class Equal_Integer 
{
    public static void main(String[] args) 
    {
        int m, n;
        Scanner s = new Scanner(System in);
        System out print("Enter the first number:");
        m = s nextInt();
        System out print("Enter the second number:");
        n = s nextInt();
        if(m == n)
        {
            System out println(m+" and "+n+" are equal ");
        }
        else
        {
            System out println(m+" and "+n+" are not equal ");
        }
    }
}
 . 
*******************
Java Program to Compute the Sum of Digits in a given Integer 
================================ EOPN
Java Program to Compute the Sum of Digits in a given Integer 
================================ EOKW
--------------------------------
output:
$ javac Digit_Sum java
$ java Digit_Sum

Enter the number:456
Sum of Digits:15
--------------------------------
import java util Scanner;
public class Digit_Sum 
{
    public static void main(String args[])
    {
        int m, n, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter the number:");
        m = s nextInt();
        while(m > 0)
        {
            n = m % 10;
            sum = sum + n;
            m = m / 10;
        }
        System out println("Sum of Digits:"+sum);
    }
}
 . 
*******************
Java Program to Extract Digits from A Given Integer
================================ EOPN
Java Program to Extract Digits from A Given Integer
================================ EOKW
--------------------------------
output:
$ javac  Extract_Digits java
$ java  Extract_Digits

Enter any number:5678
Digits at position 4:8
Digits at position 3:7
Digits at position 2:6
Digits at position 1:5
--------------------------------
import java util Scanner;
public class Extract_Digits 
{
    public static void main(String args[])
    {
        int n, m, a, i = 1, counter = 0;
        Scanner s=new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        m = n;
        while(n > 0)
        {
            n = n / 10;
            counter++;
        }
        while(m > 0)
        {
            a = m % 10;
            System out println("Digits at position "+counter+":"+a);
            m = m / 10;
            counter--;
        }
    }
}
 . 
*******************
Java  Program to Increment by 1 All the Digits of a given Integer
================================ EOPN
Java  Program to Increment by 1 All the Digits of a given Integer
================================ EOKW
--------------------------------
output:
$ javac Increment_Digits java
$ java Increment_Digits

Enter any number:4567
Result:5678
--------------------------------
import java util Scanner;
public class Increment_Digits
{
   public static void main(String[] args) 
   {
        int n, m = 0, a;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        while(n > 0)
        {
            a = n % 10;
            a++;
            m = m * 10 + a;
            n = n / 10;
        }
        n = m;
        m = 0;
        while(n > 0)
        {
            a = n % 10;
            m = m * 10 + a;
            n = n / 10;
        }
        System out println("Result:"+m);
    }
}
 . 
*******************
Java  Program to Convert Integer Values into Binary
================================ EOPN
Java  Program to Convert Integer Values into Binary
================================ EOKW
--------------------------------
output:
$ javac Decimal_Binary java
$ java Decimal_Binary

Enter the Decimal Number:19
10011
--------------------------------
import java util Scanner;
public class Decimal_Binary 
{
    public static void main(String[] args) 
    {
        int n, m;
        String x = "";
        Scanner s = new Scanner(System in);
        System out print("Enter the Decimal Number:");
        n = s nextInt();
        while(n > 0)
        {
            int a = n % 2;
            x = a + x;
            n = n / 2;
        }
        System out println(x);
    }
}
 . 
*******************
Java  Program to Convert a Given Number of Days in Terms of Years, Weeks & Days 
================================ EOPN
Java  Program to Convert a Given Number of Days in Terms of Years, Weeks & Days 
================================ EOKW
--------------------------------
output:
$ javac Year_Week_Day java
$ java Year_Week_Day

Enter the number of days:756
No  of years:2
No  of weeks:3
No  of days:5
--------------------------------
import java util Scanner;
public class Year_Week_Day 
{
    public static void main(String args[])
    {
        int m, year, week, day;
        Scanner s = new Scanner(System in);
        System out print("Enter the number of days:");
        m = s nextInt();
        year = m / 365;
        m = m % 365;
        System out println("No  of years:"+year);
        week = m / 7;
        m = m % 7;
        System out println("No  of weeks:"+week);
        day = m;
        System out println("No  of days:"+day);
    }
}
 . 
*******************
Java  Program to Convert Integer Values into  Byte, Character, Float
================================ EOPN
Java  Program to Convert Integer Values into  Byte, Character, Float
================================ EOKW
--------------------------------
output:
$ javac Integer_Conversion java
$ java  Integer_Conversion

Enter any integer:97
Conversion into byte:97
Conversion into char:a
Conversion into float:97 0
--------------------------------
import java util Scanner;
public class Integer_Conversion
{
   public static void main(String[] args) 
    {
        int a;
        byte b;
        char c;
        float d;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer:");
        a = s nextInt();
        b = (byte) a;  
        System out println("Conversion into byte:"+b);
        c = (char) a;
        System out println("Conversion into char:"+c);
        d = a;
        System out println("Conversion into float:"+d);
    }
}
 . 
*******************
Java  Program to Convert Long  Values into Byte 
================================ EOPN
Java  Program to Convert Long  Values into Byte 
================================ EOKW
--------------------------------
output:
$ javac Long_Byte java
$ java Long_Byte

Enter any long value:12548
Conversion into byte:4
--------------------------------
import java util Scanner;
public class Long_Byte 
{
    public static void main(String[] args) 
    {
        long a;
        byte b;
        Scanner s = new Scanner(System in);
        System out print("Enter any long value:");
        a = s nextLong();
        b = (byte) a;  
        System out println("Conversion into byte:"+b);
    }
}
 . 
*******************
 Java  Program to Illustrate how User Authentication is Done  
================================ EOPN
 Java  Program to Illustrate how User Authentication is Done  
================================ EOKW
--------------------------------
output:
$ javac User_Authentication java
$ java User_Authentication

Enter username:user
Enter password:user
Authentication Successful

Enter username:abcd
Enter password:1234
Authentication Failed
--------------------------------
import java util Scanner;
public class User_Authentication 
{
    public static void main(String args[])
    {
        String username, password;
        Scanner s = new Scanner(System in);
        System out print("Enter username:");//username:user
        username = s nextLine();
        System out print("Enter password:");//password:user
        password = s nextLine();
        if(username equals("user") && password equals("user"))
        {
            System out println("Authentication Successful");
        }
        else
        {
            System out println("Authentication Failed");
        }
    }
}
 . 
*******************
Java  Program to Display the IP Address of the System
================================ EOPN
Java  Program to Display the IP Address of the System
================================ EOKW
--------------------------------
output:
$ javac IP_Address java
$ java IP_Address 

IP of my system is := 127 0 1 1
--------------------------------
import java net InetAddress;
public class IP_Address 
{
    public static void main(String args[]) throws Exception
    {
        InetAddress IP = InetAddress getLocalHost();
        System out println("IP of my system is := "+IP getHostAddress());
    }    
}
 . 
*******************
Java  Program to Shutdown or Turn Off the Computer in Linux
================================ EOPN
Java  Program to Shutdown or Turn Off the Computer in Linux
================================ EOKW
--------------------------------
output:
$ javac Shutdown_System java
$ java Shutdown_System

Name of Operating System:Linux
Enter the no  of seconds after which you want your computer to shutdown:5
--------------------------------
import java io IOException;
import java util Scanner;
public class Shutdown_System
{
    public static void main(String args[]) throws IOException
    {
        int sec;
        String operatingSystem = System getProperty("os name");
        System out println("Name of Operating System:"+operatingSystem);
        if(operatingSystem equals("Linux"))
        {
            Runtime runtime = Runtime getRuntime();
            Scanner s = new Scanner(System in);
            System out print("Enter the no  of seconds after which you want your computer to shutdown:");
            sec = s nextInt();
            Process proc = runtime exec("shutdown -h -t "+sec);
            System exit(0);
        }
        else
        {
            System out println("Unsupported operating system ");
        }
    }
}
 . 
*******************
Java  Program to Check if a Given Character is Vowel or Consonant
================================ EOPN
Java  Program to Check if a Given Character is Vowel or Consonant
================================ EOKW
--------------------------------
output:
$ javac Vowel_Consonant java
$ java Vowel_Consonant

Enter the character you want to check:b
The given character b is consonant
--------------------------------
import java io BufferedReader;
import java io IOException;
import java io InputStreamReader;
import java util Scanner;
public class Vowel_Consonant 
{
    public static void main(String[] args) throws Exception 
    {
        char n;
        BufferedReader bf = new BufferedReader(new InputStreamReader(System in));
        System out print("Enter the character you want to check:");
        n = (char) bf read();
        switch(n)
        {
            case 'a':
            System out println("The given character "+n+" is vowel");
            break;

            case 'e':
            System out println("The given character "+n+" is vowel");
            break;

            case 'i':
            System out println("The given character "+n+" is vowel");
            break;

            case 'o':
            System out println("The given character "+n+" is vowel");
            break;

            case 'u':
            System out println("The given character "+n+" is vowel");
            break;

            default:
            System out println("The given character "+n+" is consonant");
            break;
        }
    }
}
 . 
*******************
Java  Program to Check if given Alphabets are Uppercase or Lowercase or Digits   
================================ EOPN
Java  Program to Check if given Alphabets are Uppercase or Lowercase or Digits   
================================ EOKW
--------------------------------
output:
$ javac Alphabet_Check java
$ java Alphabet_Check

Enter any alphabet:B
Upper Case

Enter any alphabet:z
Lower Case

Enter any alphabet:9
Digit
--------------------------------
import java io BufferedReader;
import java io IOException;
import java io InputStreamReader;
public class Alphabet_Check 
{
    public static void main(String args[]) throws IOException
    {
        char m;
        BufferedReader bf = new BufferedReader(new InputStreamReader(System in));
        System out print("Enter any alphabet:");
        m = (char) bf read();
        if(m >= 97 && m <= 123)
        {
            System out println("Lower Case");
        }
        else if(m >= 65 && m <= 96)
        {
            System out println("Upper Case");
        }
        else if(m >= 48 && m <= 57)
        {
            System out println("Digit");
        }
    }
}
 . 
*******************
Java  Program to Illustrate Use of Binary Literals 
================================ EOPN
Java  Program to Illustrate Use of Binary Literals 
================================ EOKW
--------------------------------
output:
$ javac Binary_Literal java
$ java Binary_Literal

Byte value:33
Short value:1300
Integer value:22
Result:16
--------------------------------
import java util Scanner;
public class Binary_Literal
{
    public static void main(String[] args) 
    {
        byte aB = 0b00100001;
        short aS = 0b10100010100;
        int a1 = 0b10110;
        int a2 = 0b101;
        int a3 = 0b1011; 
        int aI=a2+a3;
        System out println("Byte value:"+aB);
        System out println("Short value:"+aS);
        System out println("Integer value:"+a1);
        System out println("Result:"+aI);
    }
}
 . 
*******************
Java  Program to Use Underscores in Numeric Literal
================================ EOPN
Java  Program to Use Underscores in Numeric Literal
================================ EOKW
--------------------------------
output:
$ javac Underscore_Numeric java
$ java Underscore_Numeric

52
52
82
42
42
3 1415
9999
--------------------------------
import java util Scanner;
public class Underscore_Numeric 
{
    public static void main(String[] args) 
    {
        //  int a1 = _52;                   Invalid; cannot put underscores at the start of a literal
            int a2 = 5_2;                // OK (decimal literal)
            System out println(a2);
        //  int a3 = 52_;                   Invalid; cannot put underscores at the end of a literal
            int a4 = 5_______2;          // OK (decimal literal)
            System out println(a4);
        //  int a5 = 0_x52;                 Invalid; cannot put underscores in the 0x radix prefix
        //  int a6 = 0x_52;                 Invalid; cannot put underscores at the beginning of a number
            int a7 = 0x5_2;              // OK (hexadecimal literal)
            System out println(a7);
        //  int a8 = 0x52_;                 Invalid; cannot put underscores at the end of a number
            int a9 = 0_52;               // OK (octal literal)
            System out println(a9);
            int a10 = 05_2;              // OK (octal literal)
            System out println(a10);
        //  int a11 = 052_;                 Invalid; cannot put underscores at the end of a number
        //  float b1 = 3_ 1415F;            Invalid; cannot put underscores adjacent to a decimal point
        //  float b2 = 3 _1415F;            Invalid; cannot put underscores adjacent to a decimal point
            float b3 = 3 1_415F;         // OK (float literal)
            System out println(b3);
        //  long c1 = 9999_L;                Invalid; cannot put underscores prior to an L suffix
            long c2 = 99_99L;             // OK (long literal)
            System out println(c2);
    }
}
 . 
*******************
Java Program to Illustrate Use of Various Boolean Operators
================================ EOPN
Java Program to Illustrate Use of Various Boolean Operators
================================ EOKW
--------------------------------
output:
$ javac Boolean_Operators java
$ java Boolean_Operators

Enter a:true
Enter b:false
a = true
b = false
a|b = true
a&b = false
a^b = true
!a&b|a&!b = true
!a = false
--------------------------------
import java util Scanner;
public class Boolean_Operators 
{
    public static void main(String args[]) 
    {
        Scanner s = new Scanner(System in);
        System out print("Enter a:");
        boolean a = s nextBoolean();
        System out print("Enter b:");
        boolean b = s nextBoolean();
        boolean c = a | b;
        boolean d = a & b;
        boolean e = a ^ b;
        boolean f = (!a & b) | (a & !b);
        boolean g = !a;
        System out println("a = " + a);
        System out println("b = " + b);
        System out println("a|b = " + c);
        System out println("a&b = " + d);
        System out println("a^b = " + e);
        System out println("!a&b|a&!b = " + f);
        System out println("!a = " + g);
    }
}
 . 
*******************
Java  Program to Find Largest Between Three Numbers Using Ternary Operator
================================ EOPN
Java  Program to Find Largest Between Three Numbers Using Ternary Operator
================================ EOKW
--------------------------------
output:
$ javac Largest_Ternary java
$ java Largest_Ternary

Enter all three numbers:
5
6
7
Largest Number:7
--------------------------------
import java util Scanner;
public class Largest_Ternary 
{
    public static void main(String[] args) 
    {
        int a, b, c, d;
        Scanner s = new Scanner(System in);
        System out println("Enter all three numbers:");
        a = s nextInt();
        b = s nextInt();
        c = s nextInt();
        d = c > (a > b ? a : b) ? c : ((a > b) ? a : b);
        System out println("Largest Number:"+d);
    }
}
 . 
*******************
Java  Program to Illustrate the Use of Arithmetic Operators
================================ EOPN
Java  Program to Illustrate the Use of Arithmetic Operators
================================ EOKW
--------------------------------
output:
$ javac Arithmetic_Operators java
$ java Arithmetic_Operators

Enter the two numbers to perform operations 
Enter the first number : 12
Enter the second number : 45
Choose the operation you want to perform 
Choose 1 for ADDITION
Choose 2 for SUBTRACTION
Choose 3 for MULTIPLICATION
Choose 4 for DIVISION
Choose 5 for MODULUS
Choose 6 for EXIT
1
Result : 57

Enter the two numbers to perform operations 
Enter the first number : 56
Enter the second number : 42
Choose the operation you want to perform 
Choose 1 for ADDITION
Choose 2 for SUBTRACTION
Choose 3 for MULTIPLICATION
Choose 4 for DIVISION
Choose 5 for MODULUS
Choose 6 for EXIT
3
Result : 2352

Enter the two numbers to perform operations 
Enter the first number : 45
Enter the second number : 56
Choose the operation you want to perform 
Choose 1 for ADDITION
Choose 2 for SUBTRACTION
Choose 3 for MULTIPLICATION
Choose 4 for DIVISION
Choose 5 for MODULUS
Choose 6 for EXIT
6
--------------------------------
import java util Scanner;
public class Arithmetic_Operators
{
   public static void main(String args[])
   {   
        Scanner s = new Scanner(System in);
        while(true)
        {
            System out println("");
            System out println("Enter the two numbers to perform operations ");
            System out print("Enter the first number : ");
            int x = s nextInt();
            System out print("Enter the second number : ");
            int y = s nextInt();
            System out println("Choose the operation you want to perform ");
            System out println("Choose 1 for ADDITION");
            System out println("Choose 2 for SUBTRACTION");
            System out println("Choose 3 for MULTIPLICATION");
            System out println("Choose 4 for DIVISION");
            System out println("Choose 5 for MODULUS");
            System out println("Choose 6 for EXIT");
            int n = s nextInt();
            switch(n)
            {
                case 1:
                int add;
                add = x + y;
                System out println("Result : "+add);
                break;

                case 2:
                int sub;
                sub = x - y;
                System out println("Result : "+sub);
                break;

                case 3:
                int mul;
                mul = x * y;
                System out println("Result : "+mul);
                break;

                case 4:
                float div;
                div = (float) x / y;
                System out print("Result : "+div);
                break;

                case 5:
                int mod;               
                mod = x % y;
                System out println("Result : "+mod);
                break;

                case 6:
                System exit(0);
            }
        }
    }
}
 . 
*******************
Java  Program to Illustrate Use of Pre and Post Increment and Decrement Operators
================================ EOPN
Java  Program to Illustrate Use of Pre and Post Increment and Decrement Operators
================================ EOKW
--------------------------------
output:
$ javac Increment_Decrement java
$ java  Increment_Decrement

Enter any integer a:12
Result after Pre Increment a:13
Result after Pre Increment b:13
Result after Pre Increment a:14
Result after Post Increment c:13
Result after Pre Increment a:13
Result after Pre Decrement d:13
Result after Pre Increment a:12
Result after Post Decrement e:13
--------------------------------
import java util Scanner;
public class Increment_Decrement
{
    public static void main(String[] args) 
    {
        int a, b, c, d, e;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer a:");
        a = s nextInt();
        b = ++a;
        System out println("Result after Pre Increment a:"+a);
        System out println("Result after Pre Increment b:"+b);
        c = a++;
        System out println("Result after Pre Increment a:"+a);
        System out println("Result after Post Increment c:"+c);
        d = --a;
        System out println("Result after Pre Increment a:"+a);
        System out println("Result after Pre Decrement d:"+d);
        e = a--;
        System out println("Result after Pre Increment a:"+a);
        System out println("Result after Post Decrement e:"+e);
    }   
}
 . 
*******************
Java  Program to Illustrate Use of Relational Operators
================================ EOPN
Java  Program to Illustrate Use of Relational Operators
================================ EOKW
--------------------------------
output:
$ javac Relational_Operators java
$ java  Relational_Operators

Enter first integer:25
Enter second integer:30
a == b : false
a != b : true
a > b : false
a < b : true
b >= a : true
b <= a : false
--------------------------------
import java util Scanner;
public class Relational_Operators 
{
    public static void main(String args[]) 
    {
        Scanner s= new Scanner(System in);
        System out print("Enter first integer:");
        int a = s nextInt();
        System out print("Enter second integer:");
        int b = s nextInt();
        System out println("a == b : " + (a == b) );
        System out println("a != b : " + (a != b) );
        System out println("a > b : " + (a > b) );
        System out println("a < b : " + (a < b) );
        System out println("b >= a : " + (b >= a) );
        System out println("b <= a : " + (b <= a) );
    }
}
 . 
*******************
Java  Program to Read a Grade & Display the Equivalent Description 
================================ EOPN
Java  Program to Read a Grade & Display the Equivalent Description 
================================ EOKW
--------------------------------
output:
$ javac Grade_Description java
$ java Grade_Description

Enter grade of the student:B
Student has got marks above 60 but less than equal to 80 out of 100 
--------------------------------
import java io BufferedReader;
import java io IOException;
import java io InputStreamReader;
public class Grade_Description 
{
    public static void main(String[] args) throws IOException 
    {
        char a;
        BufferedReader bf = new BufferedReader(new InputStreamReader(System in));
        System out print("Enter grade of the student:");
        a = (char) bf read();
        if(a == 'A' || a == 'a')
        {
            System out println("Student has got marks between above 80 out of 100 ");
        }
        else if(a == 'B' || a == 'b')
        {
            System out println("Student has got marks above 60 but less than equal to 80 out of 100 ");
        }
        else if(a == 'C' || a == 'c')
        {
            System out println("Student has got marks above 40 but less than equal to 60 out of 100 ");
        }
        else
        {
            System out println("Student has failed");
        }
    }
}
 . 
*******************
Java  Program to Reverse a Number & Check if it is a Palindrome 
================================ EOPN
Java  Program to Reverse a Number & Check if it is a Palindrome 
================================ EOKW
--------------------------------
output:
$ javac Palindrome java
$ java  Palindrome

Enter any number:121
Given number 121 is Palindrome

Enter any number:145
Given number 145 is Not Palindrome
--------------------------------
import java util Scanner;
public class Palindrome
{
    public static void main(String args[])
    {
        int n, m, a = 0,x;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        m = n;
        while(n > 0)
        {
            x = n % 10;
            a = a * 10 + x;
            n = n / 10;
        }
        if(a == m)
        {
            System out println("Given number "+m+" is Palindrome");
        }
        else
        {
            System out println("Given number "+m+" is Not Palindrome");
        }
    }
}
 . 
*******************
Java  Program to Display Numbers from 1 to 10 Using For Loop
================================ EOPN
Java  Program to Display Numbers from 1 to 10 Using For Loop
================================ EOKW
--------------------------------
output:
$ javac Use_For_Loop java
$ java Use_For_Loop

1
2
3
4
5
6
7
8
9
10
--------------------------------
public class Use_For_Loop
{
    public static void main(String[] args)
    {
        for(int i = 1; i <= 10; i++)
        {
            System out println(i);
        }
    }
}
 . 
*******************
Java Program to Check Whether Given Number is Divisible by 5  
================================ EOPN
Java Program to Check Whether Given Number is Divisible by 5  
================================ EOKW
--------------------------------
output:
$ javac Check_Divisiblity java
$ java Check_Divisiblity

Enter any number:45
45 is divisible by 5

Enter any number:16
16 is not divisible by 5
--------------------------------
import java util Scanner;
public class Check_Divisiblity
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        if(n % 5 == 0)
        {
            System out println(n+" is divisible by 5");
        }
        else
        {
            System out println(n+" is not divisible by 5");
        }
    }
}
 . 
*******************
Java Program to Print Multiplication Table for any Number
================================ EOPN
Java Program to Print Multiplication Table for any Number
================================ EOKW
--------------------------------
output:
$ javac Multiplication_Table java
$ java Multiplication_Table

Enter number:7
7 * 1 = 7
7 * 2 = 14
7 * 3 = 21
7 * 4 = 28
7 * 5 = 35
7 * 6 = 42
7 * 7 = 49
7 * 8 = 56
7 * 9 = 63
7 * 10 = 70
--------------------------------
import java util Scanner;
public class Multiplication_Table 
{
    public static void main(String[] args) 
    {
        Scanner s = new Scanner(System in);
    System out print("Enter number:");        
    int n=s nextInt();
        for(int i=1; i <= 10; i++)
        {
            System out println(n+" * "+i+" = "+n*i);
        }
    }
}
 . 
*******************
Java Program to Take a Number and Return List of its Digits
================================ EOPN
Java Program to Take a Number and Return List of its Digits
================================ EOKW
--------------------------------
output:
$ javac Digits_Number java
$ java Digits_Number

Enter any number:6789
Digits:6 7 8 9
--------------------------------
import java util Scanner;
public class Digits_Number 
{
    int[] digits(int m,int l)
    {
        int x[] = new int[l];
        int i = 0;
        while(m > 0)
        {
            x[i] = m % 10;
            m = m / 10;
            i++;
        }
        return x;
    }
    public static void main(String[] args) 
    {
        int counter = 0, n, m;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        m = n;
        while(n > 0)
        {
            n =n / 10;
            counter++;
        }
        Digits_Number obj=new Digits_Number();
        int a[]=obj digits(m, counter);
        System out print("Digits:");
        for(int i = a length-1; i >= 0; i--)
        {
            System out print(a[i]+" ");
        }
    }
}
 . 
*******************
Java  Program to Reverse a Number and find the Sum of its Digits Using do-while Loop
================================ EOPN
Java  Program to Reverse a Number and find the Sum of its Digits Using do-while Loop
================================ EOKW
--------------------------------
output:
$ javac Use_Do_While java
$ java Use_Do_While

Enter any number:456
Reverse:654
Sum of digits:15
--------------------------------
import java util Scanner;
public class Use_Do_While
{
    public static void main(String[] args)
    {
        int n, a, m = 0, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        do
        {
            a = n % 10;
            m = m * 10 + a;
            sum = sum + a;
            n = n / 10;
        }
        while( n > 0);
        System out println("Reverse:"+m);
        System out println("Sum of digits:"+sum);
    }
}
 . 
*******************
Java  Program to Find Two Elements such that their Sum is Closest to Zero
================================ EOPN
Java  Program to Find Two Elements such that their Sum is Closest to Zero
================================ EOKW
--------------------------------
output:
$ javac Sum_Zero java
$ java Sum_Zero

Enter the number of elements you want:5
Enter all the numbers:
-2
-1
3
6
5
Element 1:-2
Element 2:3
--------------------------------
import java util Scanner;
public class Sum_Zero 
{
    public static void main(String[] args) 
    {
        int n, min1 = 0, min2 = 1, sum, minimum;
        Scanner s = new Scanner(System in);
        System out print("Enter the number of elements you want:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the numbers:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        minimum=Math abs(a[0] + a[1]);
        for(int i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                sum = Math abs(a[i] + a[j]);
                if(sum < minimum)
                {
                    min1 = i;
                    min2 = j;
                    minimum = sum;
                }
            }
        }
        System out println("Element 1:"+a[min1]); 
        System out println("Element 2:"+a[min2]);
    }
}
 . 
*******************
Java  Program to Extract Last two Digits of a given Year
================================ EOPN
Java  Program to Extract Last two Digits of a given Year
================================ EOKW
--------------------------------
output:
$ javac Extract_Digit  java
$ java Extract_Digit

Enter Year:2014
Last two digits:14
--------------------------------
import java util Scanner;
public class Extract_Digit 
{
    public static void main(String[] args) 
    {
        int x, y, i = 0;
        String z = "";
        Scanner s = new Scanner(System in);
        System out print("Enter Year:");
        x = s nextInt();
        while(i < 2)
        {
            y = x % 10;
            z = y + "" +z;
            x = x / 10;
            i++;
        }
        System out println("Last two digits:"+z);
    }
}
 . 
*******************
Java  Program to Find if a Given  Year is a Leap Year
================================ EOPN
Java  Program to Find if a Given  Year is a Leap Year
================================ EOKW
--------------------------------
output:
$ javac Check_Leap_Year java
$ java Check_Leap_Year

Enter any year:1800
Year 1800 is not a Leap Year

Enter any year:2000
Year 2000 is a Leap Year
--------------------------------
import java util Scanner;
public class Check_Leap_Year 
{
    public static void main(String args[])
    {
        Scanner s = new Scanner(System in);
        System out print("Enter any year:");
        int year = s nextInt();
        boolean flag = false;
        if(year % 400 == 0)
        {
            flag = true;
        }
        else if (year % 100 == 0)
        {
            flag = false;
        }
        else if(year % 4 == 0)
        {
            flag = true;
        }
        else
        {
            flag = false;
        }
        if(flag)
        {
            System out println("Year "+year+" is a Leap Year");
        }
        else
        {
            System out println("Year "+year+" is not a Leap Year");
        }
    }
}
 . 
*******************
Java  Program to Display the ATM Transaction
================================ EOPN
Java  Program to Display the ATM Transaction
================================ EOKW
--------------------------------
output:
$ javac ATM_Transaction java
$ java ATM_Transaction

Automated Teller Machine
Choose 1 for Withdraw
Choose 2 for Deposit
Choose 3 for Check Balance
Choose 4 for EXIT
Choose the operation you want to perform:1
Enter money to be withdrawn:2000
Please collect your money

Automated Teller Machine
Choose 1 for Withdraw
Choose 2 for Deposit
Choose 3 for Check Balance
Choose 4 for EXIT
Choose the operation you want to perform:3
Balance : 3000

Automated Teller Machine
Choose 1 for Withdraw
Choose 2 for Deposit
Choose 3 for Check Balance
Choose 4 for EXIT
Choose the operation you want to perform:4
--------------------------------
import java util Scanner;
public class ATM_Transaction
{
    public static void main(String args[] )
    { 
        int balance = 5000, withdraw, deposit;
        Scanner s = new Scanner(System in);
        while(true)
        {
            System out println("Automated Teller Machine");
            System out println("Choose 1 for Withdraw");
            System out println("Choose 2 for Deposit");
            System out println("Choose 3 for Check Balance");
            System out println("Choose 4 for EXIT");
            System out print("Choose the operation you want to perform:");
            int n = s nextInt();
            switch(n)
            {
                case 1:
                System out print("Enter money to be withdrawn:");
                withdraw = s nextInt();
                if(balance >= withdraw)
                {
                    balance = balance - withdraw;
                    System out println("Please collect your money");
                }
                else
                {
                    System out println("Insufficient Balance");
                }
                System out println("");
                break;

                case 2:
                System out print("Enter money to be deposited:");
                deposit = s nextInt();
                balance = balance + deposit;
                System out println("Your Money has been successfully depsited");
                System out println("");
                break;

                case 3:
                System out println("Balance : "+balance);
                System out println("");
                break;

                case 4:
                System exit(0);
            }
        }
    }
}
 . 
*******************
Java Program to Find Arithmetic Sum of 2 or 3 or 4 Variables by Passing Argument Using Method Overloading
================================ EOPN
Java Program to Find Arithmetic Sum of 2 or 3 or 4 Variables by Passing Argument Using Method Overloading
================================ EOKW
--------------------------------
output:
$ javac Sum_Overloading java
$ java Sum_Overloading

Sum with two arguments:25
Sum with three arguments:45
Sum with four arguments:70
--------------------------------
public class Sum_Overloading
{
    int add(int x, int y)
    {
        int sum;
        sum = x + y;
        return sum;
    }
    int add(int x, int y, int z)
    {
        int sum;
        sum = x + y + z;
        return sum;
    }
    int add(int x, int y, int z, int w)
    {
        int sum;
        sum = x + y + z + w;
        return sum;
    }
    public static void main(String[] args) 
    {    
        Sum_Overloading obj = new Sum_Overloading();
        int a = obj add(10, 15);
        System out println("Sum with two arguments:"+a);
        int b = obj add(10, 15, 20);
        System out println("Sum with three arguments:"+b);
        int c = obj add(10, 15, 20, 25);
        System out println("Sum with four arguments:"+c);
    }
}
 . 
*******************
Java  Program to Show the Nesting of Methods
================================ EOPN
Java  Program to Show the Nesting of Methods
================================ EOKW
--------------------------------
output:
$ javac Nesting_Methods java
$ java Nesting_Methods

Enter length of cuboid:5
Enter breadth of cuboid:6
Enter height of cuboid:7
Perimeter:132
Area:180
Volume:210
--------------------------------
import java util Scanner;
public class Nesting_Methods 
{
    int perimeter(int l, int b)
    {
            int pr = 12 * (l + b);
            return pr;
    }
    int area(int l, int b)
    {
            int pr = perimeter(l, b);
            System out println("Perimeter:"+pr);
            int ar = 6 * l * b;
            return ar;
    }
    int volume(int l, int b, int h)
    {
        int ar = area(l, b);
        System out println("Area:"+ar);
        int vol ;
        vol = l * b * h;
        return vol;
    }
    public static void main(String[] args) 
    {
        Scanner s = new Scanner(System in);
        System out print("Enter length of cuboid:");
        int l = s nextInt();
        System out print("Enter breadth of cuboid:");
        int b = s nextInt();
        System out print("Enter height of cuboid:");
        int h = s nextInt();
        Nesting_Methods obj = new Nesting_Methods();
        int vol = obj volume(l, b, h);
        System out println("Volume:"+vol);
    }
}
 . 
*******************
Java  Program to Illustrate Use of Final Keyword
================================ EOPN
Java  Program to Illustrate Use of Final Keyword
================================ EOKW
--------------------------------
output:
$ javac Final_Use java
$ java Final_Use

This is rectangle
Area:20
--------------------------------
import java util Scanner;
class Figure
{
    final int length = 5;
    final int bredth = 4;
    final void area()
    {
        int a = length * bredth;
        System out println("Area:"+a);
    }
}
class Rectangle extends Figure
{
    final void rect()
    {
        System out println("This is rectangle");
    }
}
final public class Final_Use extends Rectangle
{
    public static void main(String[] args) 
    {
        Final_Use obj = new Final_Use();
        obj rect();
        obj area();
    }
}
 . 
*******************
Java  Program to Perform String Concatenation 
================================ EOPN
Java  Program to Perform String Concatenation 
================================ EOKW
--------------------------------
output:
$ javac String_Concatenate java
$ java String_Concatenate

Enter first string:hello
Enter second string:world
New String:hello world
--------------------------------
import java util Scanner;
public class String_Concatenate
{
    public static void main(String[] args) 
    {
        String a, b, c;
        Scanner s = new Scanner(System in);
        System out print("Enter first string:");
        a = s nextLine();
        System out print("Enter second string:");
        b = s nextLine();
        String_Concatenate obj = new  String_Concatenate();
        c = obj concat(a, b);
        System out println("New String:"+c);
    }
    String concat(String x, String y)
    {
        String z;
        z = x + " " + y;
        return z;
    }
}
 . 
*******************
Java  Program to Print any Statement without Using the Main Method
================================ EOPN
Java  Program to Print any Statement without Using the Main Method
================================ EOKW
--------------------------------
output:
$ javac Without_Main java
$ java Without_Main 

Hello World!!
--------------------------------
public class Without_Main 
{
    static 
    {
         System out println("Hello World!!");
         System exit(0);
    } 
    //Does not work with JDK7
}
 . 
*******************
Java  Program to Find Season Using Switch Statement
================================ EOPN
Java  Program to Find Season Using Switch Statement
================================ EOKW
--------------------------------
output:
$ javac Switch_Demo java
$ java Switch_Demo

Enter any month(1 to 12)
3
The entered month is in the Spring 
--------------------------------
import java util Scanner;
public class Switch_Demo
{
 public static void main(String args[])
 {
    String season;
    System out println("Enter any month(1 to 12)");
    Scanner s = new Scanner(System in);
    int entry = s nextInt();
      switch (entry)
        {
            case 12:
            case 1:
            case 2:
            season = "Winter";
            break;
            case 3:
            case 4:
            case 5:
            season = "Spring";
            break;
            case 6:
            case 7:
            case 8:
            season = "Summer";
            break;
            case 9:
            case 10:
            case 11:
            season = "Autumn";
            break;
            default:
            season = "Bogus Month";
       }
        System out println("The entered month is in the " + season + " ");
   }
}
 . 
*******************
Java  Program to Return a Value from a Method 
================================ EOPN
Java  Program to Return a Value from a Method 
================================ EOKW
--------------------------------
output:
$ javac Return_Value java
$ java Return_Value

Enter first integer:5
Enter second integer:6
Result:11
--------------------------------
import java util Scanner;
public class Return_Value
{
    void input()
    {
        int x, y, z;
        Scanner s = new Scanner(System in);
        System out print("Enter first integer:");
        x = s nextInt();
        System out print("Enter second integer:");
        y = s nextInt();
        z = add(x, y);
        System out println("Result:"+z);
    }
    int add(int a, int b)
    {
        int c;
        c = a + b;
        return c;
    }
    public static void main(String[] args) 
    {
        Return_Value obj = new Return_Value();
        obj input();
    }
}
 . 
*******************
Java  Program to Use Strings in Switch Statements
================================ EOPN
Java  Program to Use Strings in Switch Statements
================================ EOKW
--------------------------------
output:
$ javac Strings_Switch java
$ java Strings_Switch

Enter choice:Saturday
Day: Saturday
--------------------------------
import java util Scanner;
public class Strings_Switch
{
    public static void main(String[] args) 
    {
        String week;
        Scanner s = new Scanner(System in);
        System out print("Enter choice:");
        week = s nextLine();
        switch (week) 
        {
            case "Monday":
            System out print("Day: Monday");
            break;    

            case "Tuesday":
            System out print("Day: Tuesday");
            break;

            case "Wednesday":
            System out print("Day: Wednesday");
            break;

            case "Thursday":
            System out print("Day: Thursday");
            break;

            case "Friday":
            System out print("Day: Friday");
            break;

            case "Saturday":
            System out print("Day: Saturday");    
            break;

            case "Sunday":
            System out print("Day: Sunday");   
            break;    
        }
    }
}
 . 
*******************
Java Program to Implement the Concept of Passing the Object and Return Object
================================ EOPN
Java Program to Implement the Concept of Passing the Object and Return Object
================================ EOKW
--------------------------------
output:
$ javac Object_Pass_Return java
$ java Object_Pass_Return

Enter length:5
Enter breadth:6
Area:30
Area:120
--------------------------------
import java util Scanner;
public class Object_Pass_Return 
{
    int length, breadth, area;
    Object_Pass_Return area1(Object_Pass_Return object1)
    {
        object1 = new Object_Pass_Return();
        object1 length = this length;
        object1 breadth = this breadth;
        object1 area = object1 length * object1 breadth;
        return object1;
    }
    Object_Pass_Return area2(Object_Pass_Return object2)
    {
        object2 = new Object_Pass_Return();
        object2 length = this length + 5;
        object2 breadth = this breadth + 6;
        object2 area = object2 length * object2 breadth;
        return object2;
    }
    public static void main(String[] args) 
    {
         Object_Pass_Return obj = new Object_Pass_Return();
         Scanner s = new Scanner(System in);
         System out print("Enter length:");
         obj length = s nextInt();
         System out print("Enter breadth:");
         obj breadth = s nextInt(); 
         Object_Pass_Return a = obj area1(obj);
         Object_Pass_Return b = obj area2(obj);
         System out println("Area:"+a area);
         System out println("Area:"+b area);
    }
}
 . 
*******************
Java  Program to Find Out the Number of Objects Created of a Class
================================ EOPN
Java  Program to Find Out the Number of Objects Created of a Class
================================ EOKW
--------------------------------
output:
$ javac Number_Objects java
$ java Number_Objects

Number of objects created:4
--------------------------------
public class Number_Objects 
{
    static int count=0;
    Number_Objects()
    {
        count++;
    }
    public static void main(String[] args) 
    {
        Number_Objects obj1 = new Number_Objects();
        Number_Objects obj2 = new Number_Objects();
        Number_Objects obj3 = new Number_Objects();
        Number_Objects obj4 = new Number_Objects();
        System out println("Number of objects created:"+count);
    }
}
 . 
*******************
Java  Program to Calculate Sum of Two Byte Values Using Type Casting 
================================ EOPN
Java  Program to Calculate Sum of Two Byte Values Using Type Casting 
================================ EOKW
--------------------------------
output:
$ javac Byte_Sum java
$ java Byte_Sum

Enter first byte value:124
Enter second byte value:115
Result:239
--------------------------------
import java util Scanner;
public class Byte_Sum
{
    public static void main(String[] args) 
    {
        byte a, b;
        int x, y, z;
        Scanner s = new Scanner(System in);
        System out print("Enter first byte value:");
        a = s nextByte();
        x = a;
        System out print("Enter second byte value:");
        b = s nextByte(); 
        y = b;
        z = x + y;
        System out println("Result:"+z);
     }
}
 . 
*******************
Java  Program to Print a Semicolon without Using a Semicolon Anywhere in the Code
================================ EOPN
Java  Program to Print a Semicolon without Using a Semicolon Anywhere in the Code
================================ EOKW
--------------------------------
output:
$ javac Semicolon java
$ java Semicolon

;
--------------------------------
import java util Scanner;
public class Semicolon
{
    public static void main(String[] args) 
    {
        int n;
        char a;
        n = 59;
        a = (char) n;
        System out println(a);
    }
}
 . 
*******************
Java  Program to Print any Statement without Using Semicolon
================================ EOPN
Java  Program to Print any Statement without Using Semicolon
================================ EOKW
--------------------------------
output:
$ javac Print_Without_Semicolon java
$ java Print_Without_Semicolon 

Sanfoundary!! Hello World 
--------------------------------
public class Print_Without_Semicolon 
{
     public static void main(String[] args) 
     {
        int i = 0;
        if(System out printf("Sanfoundary!! ") == null) {}
        for(i = 1; i < 2; System out println("Hello World "))
        {
            i++;
        }
     }
}
 . 
*******************
Java  Program to Accept the Height of a Person & Categorize as Taller, Dwarf & Average 
================================ EOPN
Java  Program to Accept the Height of a Person & Categorize as Taller, Dwarf & Average 
================================ EOKW
--------------------------------
output:
$ javac Height_Category java
$ java Height_Category

Enter the height:175
The person has average height 
--------------------------------
import java util Scanner;
public class Height_Category 
{
    public static void main(String args[])
    {
        int m;
        Scanner s = new Scanner(System in);
        System out print("Enter the height:");
        m = s nextInt();
        if(m > 175)
        {
            System out println("The person is tall ");
        }
        else if(m > 155 && m <= 175)
        {
            System out println("The person has average height ");
        }
        else
        {
            System out println("The person is dwarf ");
        }
    }
}
 . 
*******************
Java  Program to Find the Largest Two Numbers in a Given Array
================================ EOPN
Java  Program to Find the Largest Two Numbers in a Given Array
================================ EOKW
--------------------------------
output:
Enter no  of elements you want in array:5
Enter all the elements:
1
5
4
8
7
The First largest is 8
The Second largest is 7

Enter no  of elements you want in array:7
Enter all the elements:
3
2
1
3
2
1
3
The First largest is 3
The Second largest is 2
--------------------------------
import java util Scanner;
public class largest_and_second
{
    public static void main (String[] args)
    {
        Scanner scn = new Scanner (System in);
        System out print("Enter no  of elements you want in array:");
                int n = scn nextInt();

        int array[] = new int[n];
                System out println("Enter all the elements:");
        for (int i = 0; i < array length; i++)
        {
            array[i] = scn nextInt();
        }

        int largest1, largest2, temp;

        largest1 = array[0];
        largest2 = array[1];

        if (largest1 < largest2)
        {
            temp = largest1;
            largest1 = largest2;
            largest2 = temp;
        }

        for (int i = 2; i < array length; i++)
        {
            if (array[i] > largest1)
            {
                largest2 = largest1;
                largest1 = array[i];
            }
            else if (array[i] > largest2 && array[i] != largest1)
            {
                largest2 = array[i];
            }
        }

        System out println ("The First largest is " + largest1);
        System out println ("The Second largest is " + largest2);

    }
}
 . 
*******************
Java  Program to Find the Second Largest & Smallest Elements in an Array
================================ EOPN
Java  Program to Find the Second Largest & Smallest Elements in an Array
================================ EOKW
--------------------------------
output:
$ javac SecondLargest_Smallest java
$ java SecondLargest_Smallest

Enter no  of elements you want in array(Minimum 2):8
Enter all the elements:
2
5
1
7
8
6
9
3
Second Largest:8
Smallest:1
--------------------------------
import java util Scanner;
public class SecondLargest_Smallest
{
    public static void main(String[] args) 
    {
        int n, temp;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array(Minimum 2):");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] > a[j]) 
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System out println("Second Largest:"+a[n-2]);
        System out println("Smallest:"+a[0]);
    }
}
 . 
*******************
Java  Program to Find the Largest Number in an Array
================================ EOPN
Java  Program to Find the Largest Number in an Array
================================ EOKW
--------------------------------
output:
$ javac Largest_Number java
$ java Largest_Number

Enter number of elements in the array:5
Enter elements of array:
4
2
3
6
1
Maximum value:6
--------------------------------
import java util Scanner;
public class Largest_Number 
{
    public static void main(String[] args) 
    {
        int n, max;
        Scanner s = new Scanner(System in);
        System out print("Enter number of elements in the array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter elements of array:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        max = a[0];
        for(int i = 0; i < n; i++)
        {
            if(max < a[i])
            {
                max = a[i];
            }
        }
        System out println("Maximum value:"+max);
    }
}
 . 
*******************
Java  Program to Put Even & Odd Elements of an Array in 2 Separate Arrays
================================ EOPN
Java  Program to Put Even & Odd Elements of an Array in 2 Separate Arrays
================================ EOKW
--------------------------------
output:
$ javac Even_Odd java
$ java Even_Odd

Enter no  of elements you want in array:8
Enter all the elements:
1
2
3
4
5
6
7
8
Odd:1,3,5,7
Even:2,4,6,8
--------------------------------
import java util Scanner;
public class Even_Odd
{
    public static void main(String[] args) 
    {
        int n, j = 0, k = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        int odd[] = new int[n];
        int even[] = new int[n];
        System out println("Enter all the elements:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        for(int i = 0; i < n; i++)
        {
            if(a[i] % 2 != 0)
            {
                odd[j] = a[i];
                j++;
            }
            else
            {
                even[k] = a[i];
                k++;
            }
        }
        System out print("Odd:");
        if(j > 1)
        {
            for(int i = 0;i < (j-1); i++)
            {
                System out print(odd[i]+",");
            }
            System out print(odd[j-1]);
        }
        else
        {
            System out println("No number");
        }
        System out println("");
        System out print("Even:");
        if(k > 1)
        {
            for(int i = 0; i < (k-1); i++)
            {
                System out print(even[i]+",");
            }
        System out print(even[k-1]);
        }
        else
        {
            System out println("No number");
        }
    }
}
 . 
*******************
Java  Program to Insert an Element in a Specified Position in a Given Array
================================ EOPN
Java  Program to Insert an Element in a Specified Position in a Given Array
================================ EOKW
--------------------------------
output:
$ javac Insert_Array java
$ java Insert_Array 

Enter no  of elements you want in array:6
Enter all the elements:
2
4
6
9
4
5
Enter the position where you want to insert element:3
Enter the element you want to insert:7
After inserting:2,4,7,6,9,4,5
--------------------------------
 import java util Scanner;
public class Insert_Array 
{
    public static void main(String[] args) 
    {
        int n, pos, x;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n+1];
        System out println("Enter all the elements:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        System out print("Enter the position where you want to insert element:");
        pos = s nextInt();
        System out print("Enter the element you want to insert:");
        x = s nextInt();
        for(int i = (n-1); i >= (pos-1); i--)
        {
            a[i+1] = a[i];
        }
        a[pos-1] = x;
        System out print("After inserting:");
        for(int i = 0; i < n; i++)
        {
            System out print(a[i]+",");
        }
        System out print(a[n]);
    }
}
 . 
*******************
Java  Program to Delete the Specified Integer from an Array
================================ EOPN
Java  Program to Delete the Specified Integer from an Array
================================ EOKW
--------------------------------
output:
$ javac Delete java
$ java Delete

Enter no  of elements you want in array:5
Enter all the elements:
3
5
8
1
4
Enter the element you want to delete:5
After Deleting:3,8,1,4
--------------------------------
import java util Scanner;
public class Delete
{
    public static void main(String[] args) 
    {
        int n, x, flag = 1, loc = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        System out print("Enter the element you want to delete:");
        x = s nextInt();
        for (int i = 0; i < n; i++) 
        {
            if(a[i] == x)
            {
                flag =1;
                loc = i;
                break;
            }
            else
            {
                flag = 0;
            }
        }
        if(flag == 1)
        {
            for(int i = loc+1; i < n; i++)
            {
                a[i-1] = a[i];
            }
            System out print("After Deleting:");
            for (int i = 0; i < n-2; i++) 
            {
                System out print(a[i]+",");
            }
            System out print(a[n-2]);
        }
        else
        {
            System out println("Element not found");
        }
    }
}
 . 
*******************
Java  Program to Sort the Array in an Ascending Order
================================ EOPN
Java  Program to Sort the Array in an Ascending Order
================================ EOKW
--------------------------------
output:
$ javac Ascending _Order java
$ java Ascending _Order 

Enter no  of elements you want in array:5
Enter all the elements:
4
3
2
6
1
Ascending Order:1,2,3,4,6
--------------------------------
import java util Scanner;
public class Ascending _Order 
{
    public static void main(String[] args) 
    {
        int n, temp;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] > a[j]) 
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System out print("Ascending Order:");
        for (int i = 0; i < n - 1; i++) 
        {
            System out print(a[i] + ",");
        }
        System out print(a[n - 1]);
    }
}
 . 
*******************
Java  Program to Sort the Array in Descending Order
================================ EOPN
Java  Program to Sort the Array in Descending Order
================================ EOKW
--------------------------------
output:
$ javac Descending_Order java
$ java Descending_Order

Enter no  of elements you want in array:5
Enter all the elements:
2
3
5
1
4
Descending Order:5,4,3,2,1
--------------------------------
import java util Scanner;
public class Descending_Order
{
    public static void main(String[] args) 
    {
        int n, temp;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (a[i] < a[j]) 
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System out print("Descending Order:");
        for (int i = 0; i < n - 1; i++) 
        {
            System out print(a[i] + ",");
        }
        System out print(a[n - 1]);
    }
}
 . 
*******************
Java  Program to Sort Names in an Alphabetical Order
================================ EOPN
Java  Program to Sort Names in an Alphabetical Order
================================ EOKW
--------------------------------
output:
$ javac Alphabetical_Order java
$ java Alphabetical_Order

Enter number of names you want to enter:5
Enter all the names:
bryan
adam
rock
chris
scott
Names in Sorted Order:adam,bryan,chris,rock,scott
--------------------------------
import java util Scanner;
public class Alphabetical_Order
{
    public static void main(String[] args) 
    {
        int n;
        String temp;
        Scanner s = new Scanner(System in);
        System out print("Enter number of names you want to enter:");
        n = s nextInt();
        String names[] = new String[n];
        Scanner s1 = new Scanner(System in);
        System out println("Enter all the names:");
        for(int i = 0; i < n; i++)
        {
            names[i] = s1 nextLine();
        }
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            {
                if (names[i] compareTo(names[j])>0) 
                {
                    temp = names[i];
                    names[i] = names[j];
                    names[j] = temp;
                }
            }
        }
        System out print("Names in Sorted Order:");
        for (int i = 0; i < n - 1; i++) 
        {
            System out print(names[i] + ",");
        }
        System out print(names[n - 1]);
    }
}
 . 
*******************
Java  Program to Split an Array from Specified Position
================================ EOPN
Java  Program to Split an Array from Specified Position
================================ EOKW
--------------------------------
output:
$ javac Split java
$ java Split

Enter no  of elements you want in array:8
Enter all the elements:
2
3
4
7
1
9
11
6
Enter the position from where you want to split:4
First array:2 3 4 7 
Second array:1 9 11 6
--------------------------------
import java util Scanner;
public class Split
{
    public static void main(String[] args) 
    {
        int n, x, flag = 1, loc = 0, k = 0,j = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        int b[] = new int[n];
        int c[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        System out print("Enter the position from where you want to split:");
        loc = s nextInt();
        for(int i = 0; i < loc; i++)
        {
            b[k] = a[i];
            k++;
        }
        for(int i = loc; i < n; i++)
        {
            c[j] = a[i];
            j++;
        }
        System out print("First array:");
        for(int i = 0;i < k; i++)
        {
            System out print(b[i]+" ");
        }
        System out println("");
        System out print("Second array:");
        for(int i = 0; i < j; i++)
        {
            System out print(c[i]+" ");
        }
    }
}
 . 
*******************
Java  Program to Calculate Sum & Average of an Array
================================ EOPN
Java  Program to Calculate Sum & Average of an Array
================================ EOKW
--------------------------------
output:
$ javac Sum_Average java
$ java Sum_Average

Enter no  of elements you want in array:5
Enter all the elements:
4
7
6
9
3
Sum:29
Average:5 8
--------------------------------
import java util Scanner;
public class Sum_Average
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        float average;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(int i = 0; i < n ; i++)
        {
            a[i] = s nextInt();
            sum = sum + a[i];
        }
        System out println("Sum:"+sum);
        average = (float)sum / n;
        System out println("Average:"+average);
    }
}
 . 
*******************
Java  Program to Increment Every Element of the Array by One & Print Incremented Array
================================ EOPN
Java  Program to Increment Every Element of the Array by One & Print Incremented Array
================================ EOKW
--------------------------------
output:
$ javac Increment_Array java
$ java Increment_Array

Enter no  of elements you want in array:5
Enter all the elements:
2
5
8
6
9
Elements of array after increment by 1:3,6,9,7,10
--------------------------------
import java util Scanner;
public class Increment_Array
{
    public static void main(String[] args) 
    {
        int n, i = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s nextInt();
            a[i]++;
        }
        System out print("Elements of array after increment by 1:");
        for(i = 0; i < n - 1; i++)
        {
            System out print(a[i]+",");
        }
        System out print(a[n-1]);
    }
}
 . 
*******************
Java  Program to Find the Number of Non-Repeated Elements in an Array
================================ EOPN
Java  Program to Find the Number of Non-Repeated Elements in an Array
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case - some elements are unique):

Enter the size of the array
6
Enter array elements
1
2
3
4
5
5
The elements are 
1
2
3
4

Case 2 (Simple Test Case - all elements have a duplicate):

Enter the size of the array
6
Enter array elements
1
2
3
3
2
1
The elements are 
All elements are repeated
--------------------------------

//Java Program to Find the Elements that do Not have Duplicates
import java io BufferedReader;
import java io InputStreamReader;

public class NoDuplicates {
    // Function to print elements with no duplicates
    static void printElementsWithNoDuplicates(int[] array){
        int i,j;
        int count;
        int x = 0;
        boolean[] flag = new boolean[array length];
        for(i=0; i<array length; i++){
            if(!flag[i]){
                count  = 1;
                for(j=i+1; j<array length;j++){
                    if(array[j] == array[i])
                    {
                        count++;
                        flag[j] = true;
                    }
                }
                if(count == 1){
                    System out println(array[i]);
                    x++;
                }
            }
        }
        if(x==0){
            System out println("All elements are repeated");
        }
    }
    // Function to read input
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        int size;
        System out println("Enter the size of the array");
        try {
            size = Integer parseInt(br readLine());
        } catch (Exception e) {
            System out println("Invalid Input");
            return;
        }
        int[] array = new int[size];
        System out println("Enter array elements");
        int i;
        for (i = 0; i < array length; i++) {
            try {
                array[i] = Integer parseInt(br readLine());
            } catch (Exception e) {
                System out println("An error Occurred");
            }
        }
        System out println("The elements are ");
        printElementsWithNoDuplicates(array);
    }
}
 . 
*******************
Java  Program to Identify Missing Numbers in a Given Array
================================ EOPN
Java  Program to Identify Missing Numbers in a Given Array
================================ EOKW
--------------------------------
output:
$ javac Missing java
$ java Missing

The number missing is :3
--------------------------------
public class Missing
{
    static int getMissingNo (int a[], int n)
    {
        int i, total;
        total  = (n + 1) * (n + 2) / 2;
        for ( i = 0; i < n; i++)
        total -= a[i];
        return total;
    }
    public static void main(String    s)
    {
        int a[ ] = {1, 2, 4, 5, 6};
        int miss = getMissingNo(a, 5);
        System out println("The number missing is :"+miss);
    }
}
 . 
*******************
Java  Program to Find 2 Elements in the Array such that Difference between them is Largest
================================ EOPN
Java  Program to Find 2 Elements in the Array such that Difference between them is Largest
================================ EOKW
--------------------------------
output:
$ javac Largest_Difference java
$ java Largest_Difference

Enter no  of elements you want in array:7
Enter all the elements:
-2
4
5
6
2
7
-3
Greatest Difference:10
Two elements with largest difference:7 and -3
--------------------------------
import java util Scanner;
public class Largest_Difference 
{
    public static void main(String[] args) 
    {
        int n, x, count = 0, i = 0, temp = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        int diff, greatest_diff;
        greatest_diff = 0;
        int a1 = 0, a2 = 0;
        for(i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                diff = Math abs(a[i] - a[j]);
                if(diff > greatest_diff)
                {
                    greatest_diff = diff;
                    a1 = i;
                    a2 = j;
                }
            }
        }
        System out println("Greatest Difference:"+greatest_diff);
        System out println("Two elements with largest difference:"+a[a1]+" and "+a[a2]);
    }
}
 . 
*******************
Java  Program to Count the Number of Occurrence of an Element in an Array
================================ EOPN
Java  Program to Count the Number of Occurrence of an Element in an Array
================================ EOKW
--------------------------------
output:
$ javac Count_Occurrence java
$ java Count_Occurrence

Enter no  of elements you want in array:5
Enter all the elements:
2
3
3
4
3
Enter the element of which you want to count number of occurrences:3
Number of Occurrence of the Element:3
--------------------------------
import java util Scanner;
public class Count_Occurrence
{
    public static void main(String[] args) 
    {
        int n, x, count = 0, i = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        System out print("Enter the element of which you want to count number of occurrences:");
        x = s nextInt();
        for(i = 0; i < n; i++)
        {
            if(a[i] == x)
            {
                count++;
            }
        }
        System out println("Number of Occurrence of the Element:"+count);
    }
}
 . 
*******************
Java  Program to Accept Array Elements and Calculate Sum
================================ EOPN
Java  Program to Accept Array Elements and Calculate Sum
================================ EOKW
--------------------------------
output:
$ javac Array_Sum java
$ java Array_Sum

Enter no  of elements you want in array:5
Enter all the elements:
1
2
3
4
5
Sum:15
--------------------------------
import java util Scanner;
public class Array_Sum
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(int i = 0; i < n; i++)
        {
            a[i] = s nextInt();
            sum = sum + a[i];
        }
        System out println("Sum:"+sum);
    }
}
 . 
*******************
Java  Program to Segregate 0s on Left Side & 1s on Right Side of the Array
================================ EOPN
Java  Program to Segregate 0s on Left Side & 1s on Right Side of the Array
================================ EOKW
--------------------------------
output:
$ javac ArraySegregate java
$ java ArraySegregate

0        0        0        1        1        1
--------------------------------
public class ArraySegregate
{
    public static void main(String    a)
    {
        int array[] = { 0, 1, 0, 1, 1, 0 };
        segregate0and1(array, 6);
        for(int i = 0 ; i < 6; i++)
        {
            System out print(array[i]+"\t");
        }
    }
    static void segregate0and1(int array[], int size)
    {
        int left = 0, right = size-1;
        while (left < right)
        {
            /* Increment left index while we see 0 at left */
            while (array[left] == 0 && left < right)
            left++;
            /* Decrement right index while we see 1 at right */
            while (array[right] == 1 && left < right)
            right--;
            /* If left is smaller than right then there is a 1 at left and a 0 at right   Exchange it */
            if (left < right)
            {
                array[left] = 0;
                array[right] = 1;
                left++;
                right--;
            }
        }
    }
}
 . 
*******************
Java  Program to Find the Number of Elements in an Array
================================ EOPN
Java  Program to Find the Number of Elements in an Array
================================ EOKW
--------------------------------
output:
$ javac Length java
$ java Length
Number of elements in array:5
Number of elements(Using inbuilt method named length):5
--------------------------------
public class Length
{
    public static void main(String[] args) 
    {
        int a[] = {1,2,3,4,5};
        int count = 0, i = 0, n;
        try
        {
            while(a[i] != 'a')
            {
                count++;
                i++;
            }
        }
        catch(Exception e)
        {
            System out println("Number of elements in array:"+count);
        }
        n = a length;
        System out println("Number of elements(Using inbuilt method named length):"+n);
    }
}
 . 
*******************
Java  Program to Find Union & Intersection of 2 Arrays
================================ EOPN
Java  Program to Find Union & Intersection of 2 Arrays
================================ EOKW
--------------------------------
output:


Case 1 (Simple Test Case):

Enter the size of the two arrays
5
5
Enter the first array elements
1
2
3
4
5
Enter the second array elements
5
3
6
7
9
The union of both the arrays is
1 2 3 4 5 6 7 9 
The intersection of both the arrays is
5 3 

Case 2 (Simple Test Case - entirely different arrays):

Enter the size of the two arrays
4
4
Enter the first array elements
1
2
3
4
Enter the second array elements
6
7
8
9
The union of both the arrays is
1 2 3 4 6 7 8 9 
The intersection of both the arrays is


Case 3 (Simple Test Case - entirely same arrays):

Enter the size of the two arrays
4
4
Enter the first array elements
1
2
3
4
Enter the second array elements
1
2
3
4
The union of both the arrays is
1 2 3 4 
The intersection of both the arrays is
1 2 3 4
--------------------------------

// Java Program to Find the Union and Intersection of 2 Arrays 

import java io BufferedReader;
import java io IOException;
import java io InputStreamReader;
import java util Arrays;
import java util HashSet;
import java util Set;

public class UnionAndIntersection {
    // Function to find and display the union and intersection
    static void displayUnionAndIntersection(int[] arrayOne,int[] arrayTwo){
        Set<Integer> obj = new HashSet<>();
        int i,j;
        for(i=0; i<arrayOne length; i++){
            obj add(arrayOne[i]);
        }
        for(j=0; j<arrayTwo length; j++){
            obj add(arrayTwo[j]);
        }
        System out println("The union of both the arrays is");
        for(Integer I: obj){
            System out print(I + " ");
        }
        System out println();
        obj clear();
        System out println("The intersection of both the arrays is");
        for(i=0; i<arrayOne length; i++){
            obj add(arrayOne[i]);
        }
        for(j=0; j<arrayTwo length; j++){
            if(obj contains(arrayTwo[j]))
                System out print(arrayTwo[j] + " ");
        }
    }
    // Function to read the input
    public static void main(String[] args) {
        BufferedReader br=new BufferedReader(new InputStreamReader(System in));
        int m,n;
        System out println("Enter the size of the two arrays");
        try {
            n = Integer parseInt(br readLine());
            m = Integer parseInt(br readLine());
        }
        catch (IOException e)
        {
            System out println("Invalid input");
            return;
        }
        int[] arrayOne = new int[n];
        int[] arrayTwo = new int[m];
        System out println("Enter the first array elements");
        int i,j;
        for(i=0; i<arrayOne length; i++){
            try {
                arrayOne[i] = Integer parseInt(br readLine());
            }
            catch (IOException e)
            {
                System out println("Invalid array element  Enter it again");
                i--;
            }
        }
        System out println("Enter the second array elements");
        for(i=0; i<arrayTwo length; i++){
            try {
                arrayTwo[i] = Integer parseInt(br readLine());
            }
            catch (IOException e)
            {
                System out println("Invalid array element  Enter it again");
                i--;
            }
        }
        displayUnionAndIntersection(arrayOne,arrayTwo);
    }
}
 . 
*******************
Java  Program to Find if a given Integer X Appears more than N/2 Times in a Sorted Array of N Integers
================================ EOPN
Java  Program to Find if a given Integer X Appears more than N/2 Times in a Sorted Array of N Integers
================================ EOKW
--------------------------------
output:
$ javac Appear_Array java
$ java Appear_Array

Enter no  of elements you want in array:5
Enter all the elements:
2
4
1
3
2
Enter the element which you want to check:2
Given Integer does not appear more than N/2 times
--------------------------------
import java util Scanner;
public class Appear_Array
{
    public static void main(String[] args) 
    {
        int n, x, count = 0, i = 0, temp = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        for(i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                if(a[i] > a[j])
                {
                    temp = a[i];
                    a[i] = a[j];
                    a[j] = temp;
                }
            }
        }
        System out print("Enter the element which you want to check:");
        x = s nextInt();
        for(i = 0; i < n; i++)
        {
            if(a[i] == x)
            {
                count++;
            }
        }
        if(count > (n / 2))
        {
            System out println("Given Integer appears more than N/2 times");
        }
        else
        {
            System out println("Given Integer does not appear more than N/2 times");
        }    
    }
}
 . 
*******************
Java  Program to Accept the Marks of a Student into a 1D Array and find Total Marks and Percentage
================================ EOPN
Java  Program to Accept the Marks of a Student into a 1D Array and find Total Marks and Percentage
================================ EOKW
--------------------------------
output:
$ javac Student_Marks java
$ java Student_Marks

Enter no  of subject:5
Enter marks out of 100:
86
89
91
82
78
Sum:426
Percentage:85
--------------------------------
import java util Scanner;
public class Student_Marks
{
    public static void main(String[] args) 
    {
        int n, total = 0, percentage;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of subject:");
        n = s nextInt();
        int marks[] = new int[n];
        System out println("Enter marks out of 100:");
        for(int i = 0; i < n; i++)
        {
            marks[i] = s nextInt();
            total = total + marks[i];
        }
        percentage = total / n;
        System out println("Sum:"+total);
        System out println("Percentage:"+percentage);
    }
}
 . 
*******************
Java  Program to Print the Odd & Even Numbers in an Array
================================ EOPN
Java  Program to Print the Odd & Even Numbers in an Array
================================ EOKW
--------------------------------
output:
$ javac Even_Odd java
$ java Even_Odd

Enter no  of elements you want in array:5
Enter all the elements:
1
2
3
4
5
Odd numbers:1 3 5 
Even numbers:2 4
--------------------------------
import java util Scanner;
public class Even_Odd
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        System out print("Odd numbers:");
        for(int i = 0 ; i < n ; i++)
        {
            if(a[i] % 2 != 0)
            {
                System out print(a[i]+" ");
            }
        }
        System out println("");
        System out print("Even numbers:");
        for(int i = 0 ; i < n ; i++)
        {
            if(a[i] % 2 == 0)
            {
                System out print(a[i]+" ");
            }
        }
    }
}
 . 
*******************
Java  Program to Print the kth Element in the Array
================================ EOPN
Java  Program to Print the kth Element in the Array
================================ EOKW
--------------------------------
output:
$ javac Position java
$ java Position

Enter no  of elements you want in array:5
Enter all the elements:
2
5
3
8
6
Enter the k th position at which you want to check number:3
Number:3
--------------------------------
import java util Scanner;
public class Position
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for (int i = 0; i < n; i++) 
        {
            a[i] = s nextInt();
        }
        System out print("Enter the k th position at which you want to check number:");
        int k = s nextInt();
        System out println("Number:"+a[k-1]);
    }
}
 . 
*******************
Java  Program to Search Key Elements in an Array
================================ EOPN
Java  Program to Search Key Elements in an Array
================================ EOKW
--------------------------------
output:
$ javac Search_Element java
$ java Search_Element

Enter no  of elements you want in array:7
Enter all the elements:
2
4
1
5
7
6
9
Enter the element you want to find:5
Element found at position:4
--------------------------------
import java util Scanner;
public class Search_Element
{
    public static void main(String[] args) 
    {
        int n, x, flag = 0, i = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter no  of elements you want in array:");
        n = s nextInt();
        int a[] = new int[n];
        System out println("Enter all the elements:");
        for(i = 0; i < n; i++)
        {
            a[i] = s nextInt();
        }
        System out print("Enter the element you want to find:");
        x = s nextInt();
        for(i = 0; i < n; i++)
        {
            if(a[i] == x)
            {
                flag = 1;
                break;
            }
            else
            {
                flag = 0;
            }
        }
        if(flag == 1)
        {
            System out println("Element found at position:"+(i + 1));
        }
        else
        {
            System out println("Element not found");
        }
    }
}
 . 
*******************
Java  Program to Display Transpose Matrix
================================ EOPN
Java  Program to Display Transpose Matrix
================================ EOKW
--------------------------------
output:
$ javac Transpose java
$ java Transpose

Enter total rows and columns: 
3 3
Enter matrix:
1
2
3
4
5
6
7
8
9
The above matrix before Transpose is 
1 2 3  
4 5 6  
7 8 9  
The above matrix after Transpose is 
1 4 7  
2 5 8  
3 6 9
--------------------------------
import java util Scanner;
public class Transpose
{
    public static void main(String args[])  
    {
    int i, j;
    System out println("Enter total rows and columns: ");
    Scanner s = new Scanner(System in);
    int row = s nextInt();
    int column = s nextInt();
    int array[][] = new int[row][column];
    System out println("Enter matrix:");
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < column; j++) 
            {
            array[i][j] = s nextInt();
            System out print(" ");
            }
    }
    System out println("The above matrix before Transpose is ");
    for(i = 0; i < row; i++)
        {
            for(j = 0; j < column; j++)
            {
            System out print(array[i][j]+" ");
            }
            System out println(" ");
        }
    System out println("The above matrix after Transpose is ");
    for(i = 0; i < column; i++)
        {
            for(j = 0; j < row; j++)
            {
                System out print(array[j][i]+" ");
            }
            System out println(" ");
        }
    }
}
 . 
*******************
Java  Program to Find the Trace & Normal of a given Matrix
================================ EOPN
Java  Program to Find the Trace & Normal of a given Matrix
================================ EOKW
--------------------------------
output:
$ javac Trace java
$ java Trace

Enter total rows and columns: 
3
3
Enter matrix:
1
2
3
4
5
6
7
8
9
The entered Matrix is :
1 2 3  
4 5 6  
7 8 9  
The Trace of the above matrix is 
15 0
The Normal of the above matrix is 
16 881943016134134
--------------------------------
import java util *;
public class Trace
{
    public static void main(String args[])
    {
        int array[][]=new int[10][10];
        int i, j;
        double sum = 0, square = 0, result = 0;
    System out println("Enter total rows and columns: ");
    Scanner s = new Scanner(System in);
    int row = s nextInt();
    int column = s nextInt();
    System out println("Enter matrix:");
    for(i = 0; i < row; i++)
    {
        for(j = 0; j < column; j++) 
            {
                array[i][j] = s nextInt();
                System out print(" ");
            }
        }
    System out println("The entered Matrix is :");
    for(i = 0; i < row; i++)
        {
            for(j = 0; j < column; j++)
            {
            System out print(array[i][j]+" ");
            }
            System out println(" ");
        }
        System out println("The Trace of the above matrix is ");
    for(i = 0; i < row; i++)
    {  
            for(j = 0; j < column; j++)
            {
                if(i == j)
                 {
                     sum = sum + (array[i][j]);
                 }
            }
        }
        System out println(sum);  
        System out println("The Normal of the above matrix is "); 
    for(i = 0; i < row; i++)
    {
            for(j = 0; j < column; j++)
            {
                square = square + (array[i][j])*(array[i][j]);
            }
        }
        result = Math sqrt(square);
        System out println(result);
    }
}
 . 
*******************
Java  Program to Display Upper Triangular Matrix
================================ EOPN
Java  Program to Display Upper Triangular Matrix
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the order of the matrix
4
Enter matrix elements
0
0
1
1
0
1
1
1
0
0
0
1
0
0
0
0
The matrix is
0   0   1   1   
0   1   1   1   
0   0   0   1   
0   0   0   0   
The upper and lower triangle is
0   0   1   1   
0   1   1   
0   0   
0   

            1   
        0   1   
    0   0   0

Case 2 (Simple Test Case - another example):

Enter the order of the matrix
3
Enter matrix elements
1
2
3
4
5
6
7
8
9
The matrix is
1   2   3   
4   5   6   
7   8   9   
The upper and lower triangle is
1   2   3   
4   5   
7   

        6   
    8   9
--------------------------------

//Java Program to Display Upper/Lower Triangle of a Matrix

import java io BufferedReader;
import java io InputStreamReader;

public class UpperAndLowerTriangle {
    // Function to display upper and lower triangle
    static void displayUpperAndLowerTriangle(int[][] matrix){
        int order = matrix length;
        int i,j;
        for(i=0; i<order; i++){
            for(j=0; j<order;j++){
                if((i+j) <order)
                    System out print(matrix[i][j] + "\t");
            }
            System out println();
        }
        for(i=0; i<order; i++){
            for(j=0; j<order;j++){
                if((i+j) >=order)
                    System out print(matrix[i][j] + "\t");
            }
            System out println();
        }
    }
    // Function to read user input
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        int order;
        System out println("Enter the order of the matrix");
        try{
            order = Integer parseInt(br readLine());
        }
        catch(Exception e){
            System out println("An error occurred");
            return;
        }
        int[][] matrix = new int[order][order];
        System out println("Enter matrix elements");
        int i,j;
        for(i=0; i<order; i++){
            for(j=0; j<order; j++){
                try{
                    matrix[i][j] = Integer parseInt(br readLine());
                }
                catch(Exception e){
                    System out println("An error occurred");
                    return;
                }
            }
        }
        System out println("Tha matrix is");
        for(i=0; i<order; i++){
            for(j=0; j<order; j++){
                System out print(matrix[i][j] + "\t");
            }
            System out println();
        }
        System out println("The upper and lower triangle is");
        displayUpperAndLowerTriangle(matrix);
    }
}
 . 
*******************
Java  Program to Display Lower Triangular Matrix
================================ EOPN
Java  Program to Display Lower Triangular Matrix
================================ EOKW
--------------------------------
output:
$ javac Lower_Matrix java
$ java Lower_Matrix

Enter the order of your Matrics 
Enter the rows:
3
Enter the columns:
3
Enter your elements:
1
2
3
4
5
6
7
8
9
You have entered:
1 2 3 
4 5 6 
7 8 9 
The Lower Triangular Matrix is:
1 0 0 
4 5 0 
7 8 9
--------------------------------
import java util Scanner;
public class Lower_Matrix
{
public static void main(String args[])
    {
        int a[][] = new int[5][5];
        System out println("Enter the order of your Matrics ");
        System out println("Enter the rows:");
        Scanner sc = new Scanner(System in);
        int n = sc nextInt();
        System out println("Enter the columns:");
        Scanner s = new Scanner(System in);
        int m = s nextInt();
        if(n == m)
         {        
             System out println("Enter your elements:");
              for(int i = 0; i < n; i++)
            {
                for(int j = 0; j < n; j++)
                {      

                     Scanner ss = new Scanner(System in);
                     a[i][j] = ss nextInt();
                     System out print(" ");
                 }
            }
              System out println("You have entered:");
              for(int i=0; i<n; i++)
               {
                for(int j=0;j<n;j++)
                {      
                     System out print(a[i][j] + " ");
                 }
                System out println("");
               }
              System out println("The Lower Triangular Matrix is:");
              for(int i=0;i<n;i++)
               {
                for(int j=0;j<n;j++)
                 {
                  if(i>=j)
                   {
                     System out print(a[i][j] +" ");
                   }
                else
                {
                    System out print("0"+" ");
                } 
              }
            System out println("");
           }
        }
         else
        {
            System out println("you have entered improper order");
        }
   }
}
 . 
*******************
Java  Program to Interchange any two Rows & Columns in the given Matrix
================================ EOPN
Java  Program to Interchange any two Rows & Columns in the given Matrix
================================ EOKW
--------------------------------
output:
$ javac Interchange java
$ java Interchange 

Enter number of rows in matrix:3
Enter number of columns in matrix:3
Enter all the elements of matrix:
1
2
3
4
5
6
7
8
9
Given Matrix:
1 2 3 
4 5 6 
7 8 9 
Enter 1 to interchange rows
Enter 2 to interchange columns
Enter 3 to Exit
1
Enter the row numbers:
2
3
Matrix after interchanging rows:2 and 3
1 2 3 
7 8 9 
4 5 6 
Enter 1 to interchange rows
Enter 2 to interchange columns
Enter 3 to Exit
2
Enter the column numbers:
1
2
Matrix after interchanging columns:1 and 2
2 1 3 
8 7 9 
5 4 6 
Enter 1 to interchange rows
Enter 2 to interchange columns
Enter 3 to Exit
3
--------------------------------
import java util Scanner;
public class Interchange 
{
    public static void main(String[] args) 
    {
        int p, q, n, x , y, temp = 0, k = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter number of rows in matrix:");
        p = s nextInt();
        System out print("Enter number of columns in matrix:");
        q = s nextInt();
        int a[][] = new int[p][q];
        System out println("Enter all the elements of matrix:");
        for (int i = 0; i < p; i++) 
        {
            for (int j = 0; j < q; j++) 
            {
                a[i][j] = s nextInt();
            }
        }
        System out println("Given Matrix:");
        for (int i = 0; i < p; i++) 
        {
            for (int j = 0; j < q; j++) 
            {
                System out print(a[i][j] + " ");
            }
            System out println("");
        }
        while (true) 
        {
            System out println("Enter 1 to interchange rows");
            System out println("Enter 2 to interchange columns");
            System out println("Enter 3 to Exit");
            n=s nextInt();
            switch (n) 
            {
                case 1:
                System out println("Enter the row numbers:");
                x = s nextInt();
                y = s nextInt();
                for(int i = 0; i < p; i++)
                {
                    temp = a[(x-1)][i];
                    a[x-1][i] = a[y-1][i];
                    a[y-1][i] = temp;
                }
                System out println("Matrix after interchanging rows:"+x +" and "+y);
                for (int i = 0; i < p; i++) 
                {
                    for (int j = 0; j < q; j++) 
                    {
                        System out print(a[i][j] + " ");
                    }
                System out println("");
                }
                break;
                case 2:
                System out println("Enter the column numbers:");
                x = s nextInt();
                y = s nextInt();
                for(int i = 0; i < p; i++)
                {
                    temp = a[i][(x-1)];
                    a[i][x-1] = a[i][(y-1)];
                    a[i][y-1] = temp;
                }
                System out println("Matrix after interchanging columns:"+x +" and "+y);
                for (int i = 0; i < p; i++) 
                {
                    for (int j = 0; j < q; j++) 
                    {
                        System out print(a[i][j] + " ");
                    }
                System out println("");
                }
                break;
            case 3:
                System exit(0);
            }
        }
    }
}
 . 
*******************
Java  Program to Find the Frequency of Odd & Even Numbers in the given Matrix
================================ EOPN
Java  Program to Find the Frequency of Odd & Even Numbers in the given Matrix
================================ EOKW
--------------------------------
output:
$ javac Frequency java
$ java Frequency

Enter number of rows in matrix:3
Enter number of columns in matrix:3
Enter all the elements of matrix:
1
2
3
4
5
6
7
8
9
Given Matrix:
1 2 3 
4 5 6 
7 8 9 
Even number frequency:4
Odd number frequency:5
--------------------------------
import java util Scanner;
public class Frequency
{
    public static void main(String[] args) 
    {
        int p, q, count1 = 0, count2 = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter number of rows in matrix:");
        p = s nextInt();
        System out print("Enter number of columns in matrix:");
        q = s nextInt();
        int a[][] = new int[p][q];
        System out println("Enter all the elements of matrix:");
        for (int i = 0; i < p; i++) 
        {
            for (int j = 0; j < q; j++) 
            {
                a[i][j] = s nextInt();
            }
        }
        System out println("Given Matrix:");
        for (int i = 0; i < p; i++) 
        {
            for (int j = 0; j < q; j++) 
            {
                System out print(a[i][j] + " ");
            }
            System out println("");
        }
        for (int i = 0; i < p; i++) 
        {
            for (int j = 0; j < q; j++) 
            {
                if((a[i][j] % 2) == 0)
                {
                    count1++;
                }
                else
                {
                    count2++;
                }
            }
        }
        System out println("Even number frequency:"+count1);
        System out println("Odd number frequency:"+count2);
    }
}
 . 
*******************
Java  Program to Accept a Matrix of Order MxN & Interchange the Diagonals
================================ EOPN
Java  Program to Accept a Matrix of Order MxN & Interchange the Diagonals
================================ EOKW
--------------------------------
output:
$ javac Interchange_Diagonals java
$ java Interchange_Diagonals

Enter number of rows in matrix:3
Enter number of columns in matrix:3
Enter all the elements of matrix:
1
2
3
4
5
6
7
8
9
Given Matrix:
1 2 3 
4 5 6 
7 8 9 
Matrix after interchanging diagonals
3 2 1 
4 5 6 
9 8 7
--------------------------------
import java util Scanner;
public class Interchange_Diagonals
{
    public static void main(String[] args) 
    {
        int p, q, temp = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter number of rows in matrix:");
        p = s nextInt();
        System out print("Enter number of columns in matrix:");
        q = s nextInt();
        if (p == q) 
        {
            int a[][] = new int[p][q];
            System out println("Enter all the elements of matrix:");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < q; j++) 
                {
                    a[i][j] = s nextInt();
                }
            }
            System out println("Given Matrix:");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < q; j++) 
                {
                    System out print(a[i][j] + " ");
                }
                System out println("");
             }
            for(int j = 0; j < q; j++)
            {
                temp = a[j][j];
                a[j][j] = a[j][q-1-j];
                a[j][q-1-j] = temp;
            }
            System out println("Matrix after interchanging diagonals");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < q; j++) 
                {
                    System out print(a[i][j] + " ");
                }
                System out println("");
            }
        } 
        else 
        {
            System out println("Rows not equal to column");
        }
    }
}
 . 
*******************
Java  Program to Determine if a given Matrix is a Sparse Matrix 
================================ EOPN
Java  Program to Determine if a given Matrix is a Sparse Matrix 
================================ EOKW
--------------------------------
output:
$ javac Sparse java
$ java Sparse 

Enter total rows and columns: 
3
3
Enter matrix:
1
0
5
0
0
8
0
0
0
the matrix is sparse matrix
--------------------------------
import java util Scanner;
public class Sparse
{
    public static void main(String args[])
    {
    int i, j, zero = 0, count = 0; 
    int array[][] = new int[10][10];
    System out println("Enter total rows and columns: ");
    Scanner s = new Scanner(System in);
    int row = s nextInt();
    int column = s nextInt();
    System out println("Enter matrix:");
        for(i = 0; i < row; i++)
        {
            for(j = 0; j < column; j++) 
            {
                 array[i][j] = s nextInt();
                 System out print(" ");
             }
        }
        for(i = 0; i < row; i++)
        {
        for(j = 0; j < column; j++) 
        {
                if(array[i][j] == 0)
            {
                zero++; 
            }
            else
                {
                    count++;
                }
       }
       }
       if(zero>count)
       {
           System out println("the matrix is sparse matrix");
       }
       else
       {
           System out println("the matrix is not a sparse matrix");
       }
    }
}
 . 
*******************
Java Program to Add Two MXN Matrix from User Input
================================ EOPN
Java Program to Add Two MXN Matrix from User Input
================================ EOKW
--------------------------------
output:
$ javac Add_Matrix java
$ java Add_Matrix

Enter number of rows in first matrix:2
Enter number of columns in first matrix:3
Enter number of rows in second matrix:2
Enter number of columns in second matrix:3
Enter all the elements of first matrix:
1
2
3
4
5
6
Enter all the elements of second matrix:
7
8
9
4
3
2
First Matrix:
1 2 3 
4 5 6 
Second Matrix:
7 8 9 
4 3 2 
Matrix after addition:
8 10 12 
8 8 8
--------------------------------
import java util Scanner;
public class Add_Matrix
{
    public static void main(String[] args) 
    {
        int p, q, m, n;
        Scanner s = new Scanner(System in);
        System out print("Enter number of rows in first matrix:");
        p = s nextInt();
        System out print("Enter number of columns in first matrix:");
        q = s nextInt();
        System out print("Enter number of rows in second matrix:");
        m = s nextInt();
        System out print("Enter number of columns in second matrix:");
        n = s nextInt();
        if (p == m && q == n) 
        {
            int a[][] = new int[p][q];
            int b[][] = new int[m][n];
            int c[][] = new int[m][n];
            System out println("Enter all the elements of first matrix:");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < q; j++) 
                {
                    a[i][j] = s nextInt();
                }
            }
            System out println("Enter all the elements of second matrix:");
            for (int i = 0; i < m; i++) 
            {
                for (int j = 0; j < n; j++) 
                {
                    b[i][j] = s nextInt();
                }
            }
            System out println("First Matrix:");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < q; j++) 
                {
                    System out print(a[i][j]+" ");
                }
                System out println("");
            }
            System out println("Second Matrix:");
            for (int i = 0; i < m; i++) 
            {
                for (int j = 0; j < n; j++) 
                {
                    System out print(b[i][j]+" ");
                }
                System out println("");
            }
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < n; j++) 
                {
                    for (int k = 0; k < q; k++) 
                    {
                        c[i][j] = a[i][j] + b[i][j];
                    }
                }
            }
            System out println("Matrix after addition:");
            for (int i = 0; i < p; i++) 
            {
                for (int j = 0; j < n; j++) 
                {
                    System out print(c[i][j]+" ");
                }
                System out println("");
            }
        }
        else
        {
            System out println("Addition would not be possible");
        }
    }
}
 . 
*******************
Java  Program to Find the Simple Interest
================================ EOPN
Java  Program to Find the Simple Interest
================================ EOKW
--------------------------------
output:
$ javac Simple_Interest java
$ java Simple_Interest

Enter the Principal : 20202
Enter the Rate of interest : 2 5
Enter the Time period : 3
The Simple Interest is : 1515 15
--------------------------------
import java util Scanner;
public class Simple_Interest
{
    public static void main(String args[]) 
    {
        float p, r, t;
        Scanner s = new Scanner(System in);
        System out print("Enter the Principal : ");
        p = s nextFloat();
        System out print("Enter the Rate of interest : ");
        r = s nextFloat();
        System out print("Enter the Time period : ");
        t = s nextFloat();
        float si;
        si = (r * t * p) / 100;
        System out print("The Simple Interest is : " + si);
    }
}
 . 
*******************
Java  Program to Find the Roots of Quadratic Equation
================================ EOPN
Java  Program to Find the Roots of Quadratic Equation
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case - Real and Unequal Roots):

Enter the coefficients of the quadratic equation
1
-5
6
Roots are 3 0 and 2 0

Case 2 (Simple Test Case - Real and Equal Roots):

Enter the coefficients of the quadratic equation
1
-2
1
Roots are 1 0

Case 3 (Simple Test Case - Imaginary roots):

Enter the coefficients of the quadratic equation
1
1
1
Roots are -0 5+i0 8660254037844386 and -0 5-i0 8660254037844386
--------------------------------

//Java Program to Find the Roots of a Quadratic Equation

import java io BufferedReader;
import java io InputStreamReader;

public class Quadratic {
    // Function to find and display the roots of the equation 
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double a,b,c;
        try{
            System out println("Enter the coefficients of the quadratic equation");
            a = Double parseDouble(br readLine());
            b = Double parseDouble(br readLine());
            c = Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        double determinant = Math pow(b,2) - 4*a*c;
        if(determinant > 0){
            System out println("Roots are " + (-b+Math sqrt(determinant))/(2*a)
                                  + " and " + (-b-Math sqrt(determinant))/(2*a));
        }else if (determinant == 0){
            System out println("Roots are " + -b/(2*a));
        }
        else{
            System out println("Roots are " + -b/(2*a) + "+i" + 
                                Math sqrt(-determinant)/(2*a) + " and "
                                + -b/(2*a) + "-i" + Math sqrt(-determinant)/(2*a));
        }
    }
}
 . 
*******************
Java  Program to Print Armstrong Number from 1 to 1000
================================ EOPN
Java  Program to Print Armstrong Number from 1 to 1000
================================ EOKW
--------------------------------
output:
$ javac Armstrong java
$ java  Armstrong

Armstrong numbers from 1 to 1000:1 153 370 371 407
--------------------------------
public class Armstrong
{
    public static void main(String[] args) 
     {
        int n, count = 0, a, b, c, sum = 0;
        System out print("Armstrong numbers from 1 to 1000:");
        for(int i = 1; i <= 1000; i++)
        {
            n = i;
            while(n > 0)
            {
                b = n % 10;
                sum = sum + (b * b * b);
                n = n / 10;
            }
            if(sum == i)
            {
                System out print(i+" ");
            }
            sum = 0;
        }
    }
}
 . 
*******************
Java  Program to Check if a Given Number is Perfect Number
================================ EOPN
Java  Program to Check if a Given Number is Perfect Number
================================ EOKW
--------------------------------
output:
$ javac Perfect java
$ java Perfect

Enter any integer you want to check:6
Given number is Perfect
--------------------------------
import java util Scanner;
public class Perfect
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer you want to check:");
        n = s nextInt();
        for(int i = 1; i < n; i++)
        {
            if(n % i == 0)
            {
                sum = sum + i;
            }
        }
        if(sum == n)
        {
            System out println("Given number is Perfect");
        }
        else
        {
            System out println("Given number is not Perfect");
        }    
    }
    int divisor(int x)
    {
       return x;
    }
}
 . 
*******************
Java  Program to Check If a Given Number is ArmStrong Number
================================ EOPN
Java  Program to Check If a Given Number is ArmStrong Number
================================ EOKW
--------------------------------
output:
$ javac ArmStrong java
$ java ArmStrong

Enter any integer you want to check:153
Given number is Armstrong
--------------------------------
import java util Scanner;
public class ArmStrong 
{
    public static void main(String[] args) 
    {
        int n, count = 0, a, b, c, sum = 0;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer you want to check:");
        n = s nextInt();
        a = n;
        c = n;
        while(a > 0)
        {
            a = a / 10;
            count++;
        }
        while(n > 0)
        {
            b = n % 10;
            sum = (int) (sum+Math pow(b, count));
            n = n / 10;
        }
        if(sum == c)
        {
            System out println("Given number is Armstrong");
        }
        else
        {
            System out println("Given number is not Armstrong");
        }    
    }
}
 . 
*******************
Java  Program to Find Sum of Natural Numbers Using While Loop
================================ EOPN
Java  Program to Find Sum of Natural Numbers Using While Loop
================================ EOKW
--------------------------------
output:
$ javac Natural java
$ java Natural

Enter Number of items :
55
Sum of 55 numbers is :1540
--------------------------------
public class Natural 
{
    public static void main(String args[])
    {
        int x, i = 1 ;
        int sum = 0;
        System out println("Enter Number of items :");
        Scanner s = new Scanner(System in);
        x = s nextInt();
        while(i <= x)
        {
            sum = sum +i;
            i++;
        }
        System out println("Sum of "+x+" numbers is :"+sum);
    } 
}
 . 
*******************
Java  Program to Calculate the Sum, Multiplication, Division and Subtraction of Two Numbers
================================ EOPN
Java  Program to Calculate the Sum, Multiplication, Division and Subtraction of Two Numbers
================================ EOKW
--------------------------------
output:
$ javac Calculate java
$ java Calculate

Enter first number:5
Enter second number:2
Enter 1 for addition
Enter 2 for subtraction
Enter 3 for multiplication
Enter 4 for division
Enter 5 to Exit
4
Result:2 5
Enter 1 for addition
Enter 2 for subtraction
Enter 3 for multiplication
Enter 4 for division
Enter 5 to Exit
3
Result:10
Enter 1 for addition
Enter 2 for subtraction
Enter 3 for multiplication
Enter 4 for division
Enter 5 to Exit
5
--------------------------------
import java util Scanner;
public class Calculate 
{
    public static void main(String[] args) 
    {
        int m, n, opt, add, sub, mul;
        double div;
        Scanner s = new Scanner(System in);
        System out print("Enter first number:");
        m = s nextInt();
        System out print("Enter second number:");
        n = s nextInt();
        while(true)
        {
            System out println("Enter 1 for addition");
            System out println("Enter 2 for subtraction");
            System out println("Enter 3 for multiplication");
            System out println("Enter 4 for division");
            System out println("Enter 5 to Exit");
            opt = s nextInt();
            switch(opt)
            {
                case 1:
                add = m + n;
                System out println("Result:"+add);
                break;

                case 2:
                sub = m - n;
                System out println("Result:"+sub);
                break;

                case 3:
                mul = m * n;
                System out println("Result:"+mul);
                break;

                case 4:
                div = (double)m / n;
                System out println("Result:"+div);
                break;    

                case 5:
                System exit(0);
            }
        }
    }
}
 . 
*******************
Java  Program to Generate Fibonacci Numbers
================================ EOPN
Java  Program to Generate Fibonacci Numbers
================================ EOKW
--------------------------------
output:
$ javac Fibonacci java
$ java Fibonacci

Enter value of n:5
Fibonacci Series:0 1 1 2 3
--------------------------------
import java util Scanner;
public class Fibonacci 
{
    public static void main(String[] args) 
    {
        int n, a = 0, b = 0, c = 1;
        Scanner s = new Scanner(System in);
        System out print("Enter value of n:");
        n = s nextInt();
        System out print("Fibonacci Series:");
        for(int i = 1; i <= n; i++)
        {
            a = b;
            b = c;
            c = a + b;
            System out print(a+" ");
        }
    }
}
 . 
*******************
Java  Program to Add two Complex Numbers
================================ EOPN
Java  Program to Add two Complex Numbers
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the real part and imaginary part of the first complex number
4
6
Enter the real part and imaginary part of the second complex number
-5
2
The first complex number is 4 0 + i(6 0)
The second complex number is -5 0 + i(2 0)
The sum of the two complex numbers is -1 0 + i(8 0)
--------------------------------

//Java Program to Add Two Complex Numbers

import java io BufferedReader;
import java io InputStreamReader;

public class ComplexNumbers {
    // Main function to read two complex numbers and add them
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double i1,j1,i2,j2;
        System out println("Enter the real part and
                            imaginary part of the first complex number");
        try{
            i1=Double parseDouble(br readLine());
            j1=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        System out println("Enter the real part and
                            imaginary part of the second complex number");
        try{
            i2=Double parseDouble(br readLine());
            j2=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        System out println("The first complex number is "
                            + i1 + " + i(" + j1 + ")");
        System out println("The second complex number is "
                            + i2 + " + i(" + j2 + ")");
        System out println("The sum of the two complex numbers is "
                            + (i1 + i2) + " + i(" + (j1 + j2) + ")");
    }
}
 . 
*******************
Java Program to Compute List of First 100 Fibonacci Numbers
================================ EOPN
Java Program to Compute List of First 100 Fibonacci Numbers
================================ EOKW
--------------------------------
output:
$ javac Fibonacci java
$ java Fibonacci

Fibonacci Series:0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 -1323752223 512559680 -811192543 -298632863 -1109825406 -1408458269 1776683621 368225352 2144908973 -1781832971 363076002 -1418756969 -1055680967 1820529360 764848393 -1709589543 -944741150 1640636603 695895453 -1958435240 -1262539787 1073992269 -188547518 885444751 696897233 1582341984 -2015728079 -433386095 1845853122 1412467027 -1036647147 375819880 -660827267 -285007387 -945834654 -1230842041 2118290601 887448560 -1289228135 -401779575 -1691007710 -2092787285 511172301 -1581614984 -1070442683 1642909629 572466946 -2079590721 -1507123775 708252800 -798870975 -90618175 -889489150
--------------------------------
 . 
*******************
Java  Program to Find the Area of Trapezium
================================ EOPN
Java  Program to Find the Area of Trapezium
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the length of the two parallel sides and the height of the trapezium
13 765
23 555
8 0
Area = 149 28
--------------------------------

//Java Program to Find the Area of a Trapezium

import java io BufferedReader;
import java io InputStreamReader;

public class AreaOfATrapezium {
    // Function to find area of a trapezium
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double l1,l2,height;
        System out println("Enter the length of the two parallel sides 
                                     and the height of the trapezium");
        try{
            l1=Double parseDouble(br readLine());
            l2=Double parseDouble(br readLine());
            height=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(l1<=0 || l2<=0 || height<=0){
            System out println("Wrong Input");
        }
        System out println("Area = " + (l1+l2)*height/2 );
    }
}
 . 
*******************
Java  Program to Find the Area of Rhombus
================================ EOPN
Java  Program to Find the Area of Rhombus
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the length of the diagonals of the rhombus
23
45
Area = 517 5
--------------------------------

//Java Program to Find the Area of a Rhombus

import java io BufferedReader;
import java io InputStreamReader;

public class AreaOfARhombus {
    // Function to calculate the area of a rhombus
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double l1,l2;
        System out println("Enter the length of the diagonals of the rhombus");
        try{
            l1=Double parseDouble(br readLine());
            l2=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(l1<=0 || l2<=0){
            System out println("Wrong input");
            return;
        }
        System out println("Area = " + (l1*l2)/2 );
    }
}
 . 
*******************
Java  Program to Find the Area of Parallelogram
================================ EOPN
Java  Program to Find the Area of Parallelogram
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the base and the height of the parallelogram
8 34
5 678
Area = 47 35452
--------------------------------

//Java Program to Find the Area of a Parallelogram

import java io BufferedReader;
import java io InputStreamReader;

public class AreaOfAParallelogram {
    // Function to calculate the area of a parallelogram
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double base,height;
        System out println("Enter the base and the height of the parallelogram");
        try{
            base=Double parseDouble(br readLine());
            height=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(base<=0 || height<=0){
            System out println("Wrong Input");
            return;
        }
        System out println("Area = " + base*height );
    }
}
 . 
*******************
Java  Program to Find the Volume and Surface Area of Cuboids
================================ EOPN
Java  Program to Find the Volume and Surface Area of Cuboids
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the length, breadth and height of the cuboid
12
9 76
5 68
Volume = 665 2416
Surface area = 481 4336
--------------------------------

//Java Program to Find the Surface Area and Volume of a Cuboid

import java io BufferedReader;
import java io InputStreamReader;

public class Cuboid {
    // Function to calculate the Surface Area and Volume of a Cuboid
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double length,breadth,height;
        System out println("Enter the length, breadth and height of the cuboid");
        try{
            length=Double parseDouble(br readLine());
            breadth=Double parseDouble(br readLine());
            height=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(length<=0 || breadth<=0 || height<=0){
            System out println("Wrong Input");
            return;
        }
        System out println("Volume = " + length*breadth*height);
        System out println("Surface area = " + 
                            2*(length*breadth + breadth*height + height*length));
    }
}
 . 
*******************
Java  Program to Find the Surface Area and Volume of a Cone
================================ EOPN
Java  Program to Find the Surface Area and Volume of a Cone
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the radius and height of the right circular cone
3 42
12
Volume = 146 98129725379061
Surface area = 170 81027853689216
--------------------------------

//Java Program to Find the Surface Area and Volume of a Cone

import java io BufferedReader;
import java io InputStreamReader;

public class Cone {
    // Function to calculate and print the surface area and volume of a cone
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double radius,height;
        System out println("Enter the radius and
                            height of the right circular cone");
        try{
            radius=Double parseDouble(br readLine());
            height=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(radius<=0 || height<=0){
            System out println("Wrong Input");
            return;
        }
        double slantheight = Math sqrt(Math pow(radius,2) + Math pow(height,2));
        System out println("Volume = " + (Math PI*Math pow(radius,2)*height/3));
        System out println("Surface area = " + ((Math PI*radius*slantheight)
                                                 + (Math PI*radius*radius)));
    }
}
 . 
*******************
Java  Program to Find the Volume and Surface Area of Sphere
================================ EOPN
Java  Program to Find the Volume and Surface Area of Sphere
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the radius of the sphere
4 55
Volume = 394 56885292638566
Surface area = 260 15528764377075
--------------------------------

//Java Program to Find the Surface Area and Volume of a Sphere

import java io BufferedReader;
import java io InputStreamReader;

public class Sphere {
    // Function to calculate and print the surface area and volume of a sphere
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double radius;
        System out println("Enter the radius of the sphere");
        try{
            radius=Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(radius<=0){
            System out println("Wrong Input");
            return;
        }
        System out println("Volume = " + (4*Math pow(radius,3)*Math PI)/3);
        System out println("Surface area = " + (4*Math PI*Math pow(radius,2)));
    }
}
 . 
*******************
Java  Program to Find the Perimeter of a Circle, Rectangle and Triangle
================================ EOPN
Java  Program to Find the Perimeter of a Circle, Rectangle and Triangle
================================ EOKW
--------------------------------
output:
$ javac Perimeter java
$ java Perimeter

Enter radius of circle:4
Perimeter of circle:25 12
Enter length of rectangle:5
Enter breadth of rectangle:6
Perimeter of rectangle:22 0
Enter length of first side of triangle:3
Enter length of second side of triangle:4
Enter length of third side of triangle:5
Perimeter of triangle:12 0
--------------------------------
import java util Scanner;
public class Perimeter 
{
    int r, l, b, s1, s2, s3;
    double pi = 3 14,perimeter;
    Scanner s = new Scanner(System in);
    void circle()
    {
        System out print("Enter radius of circle:");
        r = s nextInt();
        perimeter = 2 * pi * r;
        System out println("Perimeter of circle:"+perimeter);
    } 
    void rectangle()
    {
        System out print("Enter length of rectangle:");
        l = s nextInt();
        System out print("Enter breadth of rectangle:");
        b = s nextInt();
        perimeter = 2 * (l + b);
        System out println("Perimeter of rectangle:"+perimeter);
    }
    void triangle()
    {
        System out print("Enter length of first side of triangle:");
        s1 = s nextInt();
        System out print("Enter length of second side of triangle:");
        s2 = s nextInt();
        System out print("Enter length of third side of triangle:");
        s3 = s nextInt();
        perimeter = s1 + s2 + s3;
        System out println("Perimeter of triangle:"+perimeter);
    }
    public static void main(String[] args) 
    {
        Perimeter obj = new Perimeter();
        obj circle();
        obj rectangle();
        obj triangle();
    }
}
 . 
*******************
Java  Program to Calculate and Display Area of a Circle
================================ EOPN
Java  Program to Calculate and Display Area of a Circle
================================ EOKW
--------------------------------
output:
$ javac Area java
$ java Area

Enter radius of circle:5
Area of circle:78 5
--------------------------------
import java util Scanner;
public class Area
{
    public static void main(String[] args) 
    {
        int r;
        double pi = 3 14, area;
        Scanner s = new Scanner(System in);
        System out print("Enter radius of circle:");
        r = s nextInt();
        area = pi * r * r;
        System out println("Area of circle:"+area);
    }            
}
 . 
*******************
Java  Program to Create a Simple Class to Find out the Area and Perimeter of Rectangle
================================ EOPN
Java  Program to Create a Simple Class to Find out the Area and Perimeter of Rectangle
================================ EOKW
--------------------------------
output:
$ javac Area_Perimeter  java
$ java Area_Perimeter 

Enter length of rectangle:4
Enter breadth of rectangle:5
Perimeter of rectangle:18
Area of rectangle:20
--------------------------------
import java util Scanner;
public class Area_Perimeter 
{
    public static void main(String[] args) 
    {
        int l, b, perimeter, area;
        Scanner s = new Scanner(System in);
        System out print("Enter length of rectangle:");
        l = s nextInt();
        System out print("Enter breadth of rectangle:");
        b = s nextInt();
        perimeter = 2 * (l + b);
        System out println("Perimeter of rectangle:"+perimeter);
        area = l * b;
        System out println("Area of rectangle:"+area);
    }
}
 . 
*******************
Java  Program to Find the Area of a Triangle Given Three Sides
================================ EOPN
Java  Program to Find the Area of a Triangle Given Three Sides
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the three sides of the triangle
14
56
43
Area of the triangle is 127 31236192923294
--------------------------------

//Java Program to Find the Area of a Triangle Using Heron's formula

import java io BufferedReader;
import java io InputStreamReader;

public class HeronsFormula {
    // Function to calculate area using Heron's Formula
    static void area(double a, double b, double c){
        double s = (a+b+c)/2;
        s = s*(s-a)*(s-b)*(s-c);
        System out println("Area of the triangle is " + Math sqrt(s));
    }
    // Function to read user input
    public static void main(String[] args) {
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        double a,b,c;
        System out println("Enter the three sides of the triangle");
        try{
            a = Double parseDouble(br readLine());
            b = Double parseDouble(br readLine());
            c = Double parseDouble(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        if(a<0 || b<0 || c<0){
            System out println("Invalid Input");
            return;
        }
        area(a,b,c);
    }
}
 . 
*******************
Java  Program to Find the Area of a Circle Given the Radius
================================ EOPN
Java  Program to Find the Area of a Circle Given the Radius
================================ EOKW
--------------------------------
output:
$ javac Circle java
$ java Circle

Enter radius of circle:22
Area of circle:1519 76
--------------------------------
public class Circle 
{
    public static void main(String[] args) 
    {
        int r;
        double pi = 3 14, area;
        Scanner s = new Scanner(System in);
        System out print("Enter radius of circle:");
        r = s nextInt();
        area = pi * r * r;
        System out println("Area of circle:"+area);
    }            
}
 . 
*******************
Java  Program to Find Area of Square, Rectangle and Circle Using Method Overloading
================================ EOPN
Java  Program to Find Area of Square, Rectangle and Circle Using Method Overloading
================================ EOKW
--------------------------------
output:
$ javac OverloadDemo java
$ java OverloadDemo

the area of the square is 25 0 sq units
the area of the rectangle is 132 0 sq units
the area of the circle is 19 625 sq units
--------------------------------
class OverloadDemo
{
    void area(float x)
    {
        System out println("the area of the square is "+Math pow(x, 2)+" sq units");
    }
    void area(float x, float y)
    {
        System out println("the area of the rectangle is "+x*y+" sq units");
    }
    void area(double x)
    {
        double z = 3 14 * x * x;
        System out println("the area of the circle is "+z+" sq units");
    }
}
class Overload 
{
     public static void main(String args[]) 
    {
       OverloadDemo ob = new OverloadDemo();
       ob area(5);
       ob area(11,12);
       ob area(2 5);
        }
}
 . 
*******************
Java  Program to Find Factorial Value With Using Recursion
================================ EOPN
Java  Program to Find Factorial Value With Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Factorial java
$ java Factorial

Enter any integer:8
Factorial of 8 :40320
--------------------------------
import java util Scanner;
public class Factorial
{
    public static void main(String[] args) 
    {
        int n, mul;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer:");
        n = s nextInt();
        Factorial obj = new Factorial();
        mul = obj fact(n);
        System out println("Factorial of "+n+" :"+mul);
    }
    int fact(int x)
    {
        if(x > 1)
        {
            return(x * fact(x - 1));
        }
        return 1;
    }
}
 . 
*******************
Java  Program to Find if a Number is Prime or Not Using Recursion
================================ EOPN
Java  Program to Find if a Number is Prime or Not Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Prime  java
$ java Prime

Enter any number:17
17 is prime number
--------------------------------

import java util Scanner;
public class Prime 
{
    public static void main(String[] args) 
    {
        int n, x;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        Prime obj = new Prime();
        x = obj prime(n, 2);
        if(x == 1)
        {
            System out println(n+" is prime number");
        }
        else
        {
            System out println(n+" is not prime number");
        }
    }
    int prime(int y,int i)
    {
         if(i < y)
        {
            if(y % i != 0) 
            {
                return(prime(y, ++i));
            } 
            else
            {
                return 0; 
            }
        }
        return 1;
    }
}
 . 
*******************
Java  Program to Print First N Natural Numbers Using Recursion
================================ EOPN
Java  Program to Print First N Natural Numbers Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Natural java
$ java Natural

Enter any number:8
Natural numbers till 8 :1 2 3 4 5 6 7 8
--------------------------------
import java util Scanner;
public class Natural
{
    public static void main(String[] args) 
    {
        int n;
        Scanner s = new Scanner(System in);
        System out print("Enter any number:");
        n = s nextInt();
        Natural obj = new Natural();
        System out print("Natural numbers till "+n+" :");
        obj natural(n,1);


    }
    int natural(int y, int i)
    {
        if(i <= y)
        {
            System out print(i+" ");
            return(natural(y,++i));
        }
        return 1;
    }
}
 . 
*******************
Java  Program to Find Factorial Value Without Using Recursion 
================================ EOPN
Java  Program to Find Factorial Value Without Using Recursion 
================================ EOKW
--------------------------------
output:
$ javac Factorial java
$ java Factorial

Enter any integer:8
Factorial of 8 :40320
--------------------------------
import java util Scanner;
public class Factorial 
{
    public static void main(String[] args) 
    {
        int n, mul = 1;
        Scanner s = new Scanner(System in);
        System out print("Enter any integer:");
        n = s nextInt();
        for(int i = 1; i <= n; i++)
        {
            mul = mul * i;
        }
        System out println("Factorial of "+n+" :"+mul);
    }
}
 . 
*******************
Java  Program to Convert a Number Decimal System to Binary System Using Recursion
================================ EOPN
Java  Program to Convert a Number Decimal System to Binary System Using Recursion
================================ EOKW
--------------------------------
output:
$ javac Convert java
$ java Convert

Enter any decimal number:25
Binary number:11001
--------------------------------
import java util Scanner;
public class Convert
{
    public static void main(String[] args) 
    {
        int n;
        String x;
        Scanner s = new Scanner(System in);
        System out print("Enter any decimal number:");
        n = s nextInt();
        Convert obj = new Convert();
        x = obj binary(n);
        System out println("Binary number:"+x);
    }
    String binary(int y)
    {
        int a;
        if(y > 0)
        {
            a = y % 2;
            return (binary(y / 2) + "" +a);
        }
        return "";
    }
}
 . 
*******************
Java  Program to Convert Binary to Octal
================================ EOPN
Java  Program to Convert Binary to Octal
================================ EOKW
--------------------------------
output:
$ javac Main_Class java
$ java Main_Class

Binary to Octal

Enter the number :
1010
Octal Value is : 12
--------------------------------
import java util Scanner;
 class Binary_Octal
 {
                 Scanner scan;
    int num;
    void getVal() 
    {
                     System out println("Binary to Octal");
        scan = new Scanner(System in);
        System out println("\nEnter the number :");
        num = Integer parseInt(scan nextLine(), 2);
    }
    void convert() 
    {
            String octal = Integer toOctalString(num);
           System out println("Octal Value is : " + octal);
    }
 }
class Main_Class
{
  public static void main(String    d) 
    {
        Binary_Octal obj = new Binary_Octal();
        obj getVal();
        obj convert();
   }
}
 . 
*******************
Java  Program to Convert Binary to Hexadecimal
================================ EOPN
Java  Program to Convert Binary to Hexadecimal
================================ EOKW
--------------------------------
output:
$ javac Main_Class java
$ java Main_Class

Binary to HexaDecimal

Enter the number :
1010
HexaDecimal Value is : a
--------------------------------
import java util Scanner;
class Binary_Hexa 
   {
                 Scanner scan;
    int num;
    void getVal() 
        {
        System out println("Binary to HexaDecimal");
        scan = new Scanner(System in);
        System out println("\nEnter the number :");
        num = Integer parseInt(scan nextLine(), 2);
        }
    void convert() 
       {
        String hexa = Integer toHexString(num);
        System out println("HexaDecimal Value is : " + hexa);
       }
    }
class Main_Class
 {
           public static void main(String    q) 
            {
    Binary_Hexa obj = new Binary_Hexa();
    obj getVal();
    obj convert();
              }
}
 . 
*******************
Java  Program to Convert Octal to Binary
================================ EOPN
Java  Program to Convert Octal to Binary
================================ EOKW
--------------------------------
output:
$ javac MainClass java
$ java MainClass

Octal to Binary

Enter the number :
10
Binary Value is : 1000
--------------------------------
import java util Scanner;
class Octal_Binary 
{
    Scanner scan;
    int num;
    void getVal() 
    {
        System out println("Octal to Binary");
        scan = new Scanner(System in);

        System out println("\nEnter the number :");
        num = Integer parseInt(scan nextLine(), 8);
    }

    void convert() 
    {
        String binary = Integer toBinaryString(num);
        System out println("Binary Value is : " + binary);
    }
}
class MainClass 
{
    public static void main(String args[]) 
    {
        Octal_Binary obj = new Octal_Binary();
        obj getVal();
        obj convert();
    }
}
 . 
*******************
Java  Program to Convert Hexadecimal to Binary
================================ EOPN
Java  Program to Convert Hexadecimal to Binary
================================ EOKW
--------------------------------
output:
$ javac MainClass java
$ java MainClass

HexaDecimal to Binary

Enter the number :
20
Binary Value is : 100000
--------------------------------
import java util Scanner;
class Hexa_Binary
     {
                 Scanner scan;
    int num;
    void getVal()
                     {
                System out println("HexaDecimal to Binary");
        scan = new Scanner(System in);
        System out println("\nEnter the number :");
        num = Integer parseInt(scan nextLine(), 16);
        }
    void convert()
           {
        String binary = Integer toBinaryString(num);
        System out println("Binary Value is : " + binary);
       }
     }
class MainClass
{
         public static void main(String args[])
            {
    Hexa_Binary obj = new Hexa_Binary();
    obj getVal();
    obj convert();
            }
}
 . 
*******************
Java  Program to Convert Octal to Decimal 
================================ EOPN
Java  Program to Convert Octal to Decimal 
================================ EOKW
--------------------------------
output:
$ javac MainClass java
$ java MainClass

Octal to Decimal

Enter the number :
10
Decimal Value is : 8
--------------------------------
import java util Scanner;
 class Octal_Decimal 
 {
    Scanner scan;
    int num;
    void getVal() 
     {
                 System out println("Octal to Decimal");
    scan = new Scanner(System in);
    System out println("\nEnter the number :");
    num = Integer parseInt(scan nextLine(), 8);
      }
    void convert() 
       {
    String decimal = Integer toString(num);
                 System out println("Decimal Value is : " + decimal);
       }
}
class MainClass 
{
    public static void main(String args[]) 
      {
         Octal_Decimal obj = new Octal_Decimal();
         obj getVal();
         obj convert();
      }
}
 . 
*******************
Java  Program to Convert the Given Binary Number into its Equivalent Decimal
================================ EOPN
Java  Program to Convert the Given Binary Number into its Equivalent Decimal
================================ EOKW
--------------------------------
output:
$ javac MainClass java
$ java MainClass

Binary to Decimal

Enter the number :
1010
Decimal Value is : 10
--------------------------------
import java util Scanner;
class Binary_Decimal
 {
     Scanner scan;
     int num;
     void getVal() 
      {
                  System out println("Binary to Decimal");
     scan = new Scanner(System in);
     System out println("\nEnter the number :");
     num = Integer parseInt(scan nextLine(), 2);
      }
    void convert() 
      {
                  String decimal = Integer toString(num);
    System out println("Decimal Value is : " + decimal);
      }
}
class  MainClass 
{
    public static void main(String args[]) 
      {
          Binary_Decimal obj = new Binary_Decimal();
           obj getVal();
           obj convert();
      }
}
 . 
*******************
Java  Program to Convert a Decimal Number to Binary & Count the Number of 1s 
================================ EOPN
Java  Program to Convert a Decimal Number to Binary & Count the Number of 1s 
================================ EOKW
--------------------------------
output:
$ javac Convert java
$ java Convert

Enter any decimal number:25
Binary number:11001
No  of 1s:3
--------------------------------
import java util Scanner;
public class Convert
{
    public static void main(String[] args) 
    {
        int n, count = 0, a;
        String x = "";
        Scanner s = new Scanner(System in);
        System out print("Enter any decimal number:");
        n = s nextInt();
        while(n > 0)
        {
            a = n % 2;
            if(a == 1)
            {
                count++;
            }
            x = a + "" + x;
            n = n / 2;
        }
        System out println("Binary number:"+x);
        System out println("No  of 1s:"+count);
    }
}
 . 
*******************
Java  Program to Convert Hex to Decimal
================================ EOPN
Java  Program to Convert Hex to Decimal
================================ EOKW
--------------------------------
output:
$ javac Hexa_Decimal_Main java
$ java Hexa_Decimal_Main

HexaDecimal to Decimal
Enter the number :
12
Decimal Value is : 18
--------------------------------
import java util Scanner;
class Hexa_Decimal
{
    Scanner scan;
    int num;
     void getVal()
      {
        System out println("HexaDecimal to Decimal");
        scan = new Scanner(System in);
        System out println("Enter the number :");
        num = Integer parseInt(scan nextLine(), 16);
      }
    void convert()
     {
        String decimal = Integer toString(num);
        System out println("Decimal Value is : " + decimal);
     }
}
class Hexa_Decimal_Main
{
       public static void main(String args[])
         {
    Hexa_Decimal obj = new Hexa_Decimal();
    obj getVal();
    obj convert();
         }
}
 . 
*******************
Java  Program to Convert Decimal to Binary, Octal and Hexadecimal Number
================================ EOPN
Java  Program to Convert Decimal to Binary, Octal and Hexadecimal Number
================================ EOKW
--------------------------------
output:
$ javac Decimal_Conversion java
$ java Decimal_Conversion

Decimal to HexaDecimal,Octal and Binary

Enter the number :
121
HexaDecimal Value is : 79
Octal Value is : 171
Binary Value is : 1111001
--------------------------------
class Convert
{
    Scanner scan;
    int num;
    void getVal()
     {
          System out println("Decimal to HexaDecimal,Octal and Binary");
          scan = new Scanner(System in);
          System out println("\nEnter the number :");
          num = Integer parseInt(scan nextLine());
     }
    void convert()
      {
           String hexa = Integer toHexString(num);
           System out println("HexaDecimal Value is : " + hexa);
           String octal = Integer toOctalString(num);
           System out println("Octal Value is : " + octal);
           String binary = Integer toBinaryString(num);
           System out println("Binary Value is : " + binary);
       }
}
class Decimal_Conversion
{
   public static void main(String args[])
    {
        Convert obj = new Convert();
         obj getVal();
         obj convert();
    }
}
 . 
*******************
Java  Program to Convert Fahrenheit  into Celsius
================================ EOPN
Java  Program to Convert Fahrenheit  into Celsius
================================ EOKW
--------------------------------
output:
$ javac Fahrenheit_Celsius java
$ java Fahrenheit_Celsius

Enter temperature in Fahrenheit:15
Temperature in Celsius:-9 4452
--------------------------------
import java util Scanner;
public class Fahrenheit_Celsius 
{
    public static void main(String[] args) 
    {
        double celsius, fahrenheit;
        Scanner s = new Scanner(System in);
        System out print("Enter temperature in Fahrenheit:");
        fahrenheit = s nextDouble();
        celsius = (fahrenheit-32)*(0 5556);
        System out println("Temperature in Celsius:"+celsius);        
    }
}
 . 
*******************
Java  Program to Display Floyds Triangle
================================ EOPN
Java  Program to Display Floyds Triangle
================================ EOKW
--------------------------------
output:
$ javac Floyd java
$ java Floyd

Enter the number of rows of floyd's triangle you want
5
Floyd's triangle :-
1 
2 3 
4 5 6 
7 8 9 10 
11 12 13 14 15
--------------------------------
import java util Scanner;

class Floyd
{
   public static void main(String args[])
   {
      int n, num = 1, c, d;
      Scanner in = new Scanner(System in);
      System out println("Enter the number of rows of floyd's triangle you want");
      n = in nextInt();
      System out println("Floyd's triangle :-");
      for ( c = 1 ; c <= n ; c++ )
      {
         for ( d = 1 ; d <= c ; d++ )
           {
              System out print(num+" ");
              num++;
           }
          System out println();
      }
   }
}
 . 
*******************
Java  Program to Display Pascal Triangle
================================ EOPN
Java  Program to Display Pascal Triangle
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the size
5
The Pascal's Triangle is
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 

Case 2 (Simple Test Case - another example):

Enter the size
12
The Pascal's Triangle is
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
1 6 15 20 15 6 1 
1 7 21 35 35 21 7 1 
1 8 28 56 70 56 28 8 1 
1 9 36 84 126 126 84 36 9 1 
1 10 45 120 210 252 210 120 45 10 1 
1 11 55 165 330 462 462 330 165 55 11 1
--------------------------------

//Java program to print Pascal's Triangle of a given size 

import java io BufferedReader;
import java io InputStreamReader;

public class PascalTriangle {
    // Function to calculate factorial of a number
    static int factorial(int n)
    {
        int fact = 1;
        int i;
        for(i=1; i<n; i++)
        {
            fact*=i;
        }
        return i;
    }
    // Function to display the pascal triangle
    static void display(int n) 
    {
        int i;
        int coefficient;
        int line;
        for(line=1;line<=n;line++)
        {
            for(i=0;i<=line;i++)
            {
                System out print((factorial(line)/factorial(line-i) * factorial(i)) + " ");
            }
            System out println();
        }
    }
    // main Function to read user input
    public static void main(String[] args){  
        BufferedReader br=new BufferedReader(new InputStreamReader(System in));
        int n;
        System out println("Enter the size");
        try {
            n = Integer parseInt(br readLine());
        }
        catch(Exception e){
            System out println("Invalid Input");
            return;
        }
        System out println("The Pascal's Triangle is");
        display(n);
    }
}
 . 
*******************
Java  Program to Perform Pow () Function
================================ EOPN
Java  Program to Perform Pow () Function
================================ EOKW
--------------------------------
output:
$ javac Power java
$ java Power

Enter any number: 5
Square of 5:25 0
Cube of 5:125 0
--------------------------------
 . 
*******************
Java  Program to Compute GCD     
================================ EOPN
Java  Program to Compute GCD     
================================ EOKW
--------------------------------
output:
$ javac GCD java
$ java GCD

Enter First Number:24
Enter Second Number:16
Greatest Common Divisor:8
--------------------------------
import static java lang StrictMath min;
import java util Scanner;
public class GCD
{
    public static void main(String args[])
    {
        int a, b, hcf = 1;
        Scanner s = new Scanner(System in);
        System out print("Enter First Number:");
        a = s nextInt();
        System out print("Enter Second Number:");
        b = s nextInt();
        int n = min(a,b);
        for(int i = 2; i < n; i++)
        {
            while(a % i == 0 && b % i==0)
            {
                hcf = hcf * i;
                a = a / i;
                b = b / i;
            }
        }
        System out println("Greatest Common Divisor:"+hcf);
    }
}
 . 
*******************
Java Program to Generate Harmonic Series
================================ EOPN
Java Program to Generate Harmonic Series
================================ EOKW
--------------------------------
output:
$ javac Harmonic java
$ java Harmonic

Enter any number : 5
The Harmonic Series is : 0 2  0 45  0 7833333333333333  1 2833333333333332  2 283333333333333  
Output of Harmonic Series is 2 283333333333333
--------------------------------
import java util Scanner;
class Harmonic
{
public static void main(String    a)
    {
        System out print("Enter any number : ");
        Scanner s = new Scanner(System in);
        int num = s nextInt();
        System out print("The Harmonic Series is : ");
        double result = 0 0;
        while(num > 0)
          {
               result = result + (double) 1 / num;
               num--;
               System out print(result +"  ");
          }
        System out println("");
        System out println("Output of Harmonic Series is "+result);
    }
}
 . 
*******************
Java  Program to Add the nth Square Series 
================================ EOPN
Java  Program to Add the nth Square Series 
================================ EOKW
--------------------------------
output:
$ javac Square_Series java
$ java Square_Series

Given series:1^2 + 2^2 + 3^2          +n^2
Enter value of n:5
Sum of series:55
--------------------------------
import java util Scanner;
public class Square_Series
{
    public static void main(String[] args) 
    {
        int n, sum = 0;
        Scanner s = new Scanner(System in);
        System out println("Given series:1^2 + 2^2 + 3^2          +n^2");
        System out print("Enter value of n:");
        n = s nextInt();
        for(int i = 1; i <= n; i++)
        {
            sum = sum + i * i;
        }
        System out println("Sum of series:"+sum);
    }
}
 . 
*******************
Java  Program to Find Sum of the Series 1/1! + 2/2! + 3/3! + 1/N!
================================ EOPN
Java  Program to Find Sum of the Series 1/1! + 2/2! + 3/3! + 1/N!
================================ EOKW
--------------------------------
output:
$ javac Sum_Series java
$ java Sum_Series

1/1! + 2/2! + 3/3! +   N/N!
Enter the no  of terms in series:5
Sum of series:2 708333333333333
--------------------------------
import java util Scanner;
public class Sum_Series 
{
    public static void main(String[] args) 
    {
        double sum = 0;
        int n;
        System out println("1/1! + 2/2! + 3/3! +   N/N!");
        Scanner s = new Scanner(System in);
        System out print("Enter the no  of terms in series:");
        n = s nextInt();
        Sum_Series obj = new Sum_Series();
        for(int i = 1; i <= n; i++)
        {
            sum = sum + (double)i / (obj fact(i));
        }
        System out println("Sum of series:"+sum);
    }
    int fact(int x)
    {
        int mul = 1;
        while(x > 0)
        {
            mul = mul * x;
            x--;
        }
        return mul;
    }
}
 . 
*******************
Java  Program to Find GCD and LCM of Two Numbers Using Euclids Algorithm
================================ EOPN
Java  Program to Find GCD and LCM of Two Numbers Using Euclids Algorithm
================================ EOKW
--------------------------------
output:
$ javac Euclid java
$ java Euclid

Enter any two numbers to calculate GCD
6 50
GCD is 2
Enter any two numbers to calculate LCM
11 17
LCM is 187
--------------------------------
import java util Scanner;
public class Euclid
{
    void gcd(long a, long b)
    {
        while (b > 0)
        {
             long temp = b;
             b = a % b; // % is remainder
             a = temp;
        }
        System out println("GCD is "+a);
    }
    void lcm(long a, long b)
    {
        long x = a;
        long y = b;
        while (b > 0)
        {
            long temp = b;
            b = a % b; // % is remainder
            a = temp;
        }
        long gcd = a;
        long lcm = (x * (y / gcd));
        System out println("LCM is "+ lcm);
    }
    public static void main(String    a)
    {
        Euclid abc = new  Euclid();
        System out println("Enter any two numbers to calculate GCD");
        Scanner s = new Scanner(System in);
        long x = s nextLong();
        long y = s nextLong();
        abc gcd(x, y);
        System out println("Enter any two numbers to calculate LCM");
        long l = s nextLong();
        long m = s nextLong();
        abc lcm(l, m);
    }
}
 . 
*******************
Java  Program to Find Prime Numbers Within a Range of n1 and n2
================================ EOPN
Java  Program to Find Prime Numbers Within a Range of n1 and n2
================================ EOKW
--------------------------------
output:
$ javac Prime java
$ java Prime

Enter the lower limit :
2
Enter the upper limit :
20
The prime numbers in between the entered limits are :
3
5
7
11
13
17
19
--------------------------------
 . 
*******************
Java  Program to Print Diamond Pattern
================================ EOPN
Java  Program to Print Diamond Pattern
================================ EOKW
--------------------------------
output:
$ javac Diamond java
$ java Diamond

Enter the number of rows: 5
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
--------------------------------
import java util Scanner;
public class Diamond
{
    public static void main(String args[]) 
    {
        int n, i, j, space = 1;
        System out print("Enter the number of rows: ");
        Scanner s = new Scanner(System in);
        n = s nextInt();
        space = n - 1;
        for (j = 1; j <= n; j++) 
        {
            for (i = 1; i <= space; i++) 
            {
                System out print(" ");
            }
            space--;
            for (i = 1; i <= 2 * j - 1; i++) 
            {
                System out print("*");                
            }
            System out println("");
        }
        space = 1;
        for (j = 1; j <= n - 1; j++) 
        {
            for (i = 1; i <= space; i++) 
            {
                System out print(" ");
            }
            space++;
            for (i = 1; i <= 2 * (n - j) - 1; i++) 
            {
                System out print("*");
            }
            System out println("");
        }
    }
}
 . 
*******************
Java  Program to Display Stars in a Triangular Form 
================================ EOPN
Java  Program to Display Stars in a Triangular Form 
================================ EOKW
--------------------------------
output:

Case 1 (Simple Test Case):

Enter the number of lines
8
The triangular pattern is
       * 
      * * 
     * * * 
    * * * * 
   * * * * * 
  * * * * * * 
 * * * * * * * 
* * * * * * * *
--------------------------------

//Java Program to Print * in Triangular Pattern

import java io BufferedReader;
import java io InputStreamReader;

public class Pattern2 {
    // Function to display the pattern
    public static void main(String[] args) {
        int i,j,k,n;
        System out println("Enter the number of lines");
        BufferedReader br = new BufferedReader(new InputStreamReader(System in));
        try{
            n = Integer parseInt(br readLine());
        }catch (Exception e){
            System out println("An error occurred");
            return;
        }
        System out println("The triangular pattern is");
        int space = n-2;
        for(i=1; i<=n; i++){
            for(k=space;k>=0;k--){
                System out print(" ");
            }
            space--;
            for(j = 1; j<=i; j++){
                System out print("* ");
            }
            System out println();
        }
    }
}
 . 
*******************
Java  Program to Illustrates Use of Abstract Class and Method
================================ EOPN
Java  Program to Illustrates Use of Abstract Class and Method
================================ EOKW
--------------------------------
output:
$ javac AbstractionDemo java
$ java AbstractionDemo

Result:18 0
Result:6 0
Result:72 0
Result:2 0
--------------------------------
abstract class Calculation
{
    float a = 12, b = 6, c;
    abstract void add();
    void subtract()
    {
        c = a - b;
        System out println("Result:"+c);
    }
    abstract void multiply();
    void divide()
    {
        c = a / b;
        System out println("Result:"+c);
    }
}
public class AbstractionDemo extends Calculation
{
    void add()
    {
        c = a + b;
        System out println("Result:"+c);
    }
    void multiply()
    {
        c = a * b;
        System out println("Result:"+c);
    }
    public static void main(String[] args)
    {
        AbstractionDemo obj = new AbstractionDemo;
        obj add();
        obj subtract();
        obj multiply();
        obj divide();
    }
}
 . 
*******************
Java  Program to Illustrates Use of Instance Inner Class
================================ EOPN
Java  Program to Illustrates Use of Instance Inner Class
================================ EOKW
--------------------------------
output:
$ javac InnerDemo java
$ java InnerDemo 

display: outer_x = 100
--------------------------------
class Outer 
{
    int outer_x = 100;
    void test() 
    {
        Inner inner = new Inner();
        inner display();
    }
    class Inner 
    {
        int y = 10; 
        void display() 
        {
            System out println("display: outer_x = " + outer_x);
        }
    }
    void showy() 
    {
        System out println(y); // error, y not known here!
    }
}
class InnerDemo 
{
    public static void main(String args[]) 
    {
        Outer outer = new Outer();
        outer test();
    }
}
 . 
*******************
Java  Program to Illustrates Use of Static Inner Class
================================ EOPN
Java  Program to Illustrates Use of Static Inner Class
================================ EOKW
--------------------------------
output:
$ javac Outer java
$ java Outer

'In main method'  The vlaue of static data member of outer class is :20
Inner class method accessed by Inner class object 
20
Inner class method accessed by outer class object 
20
--------------------------------
public class Outer          //outer class
{
    int x = 10;
    static int y = 20;
    static class Inner          //static inner class
    {
        void show()             // non static method in static inner class
        {
            System out println(y);
            //  System out println(x);  error :  non-static variable x cannot be referenced from a static context
        }
    }
    public static  void main(String    s)
    {
        System out println("'In main method'  The vlaue of static data member of outer class is :"+y);
        //  System out println(x);                     error:  non-static variable x cannot be referenced from a static context
        System out println("Inner class method accessed by Inner class object ");
        Inner i = new Inner();
        i show();
        System out println("Inner class method accessed by outer class object ");
        Outer Inner o = new Outer Inner();
        o show();
    }
}
 . 
*******************
Java  Program to Illustrates Use of Referencing the Object from Inner Class
================================ EOPN
Java  Program to Illustrates Use of Referencing the Object from Inner Class
================================ EOKW
--------------------------------
output:
$ javac Outer_Class java
$ java  Outer_Class

Success
--------------------------------
public class Outer_Class
{
    static Outer_Class InnerClass obj;
    void test1()
    {
        System out println("Success");
    }
    static public class InnerClass
    {
        private String name = "Peakit";
        public void test2()
        {
            Outer_Class outer = new Outer_Class();
            outer test1();
        }
    }
    public static void main(String[] args)
    {
        obj = new Outer_Class InnerClass();
        obj test2();
    }
}
 . 
*******************
Java  Program to Illustrate Use of Methods in a Class
================================ EOPN
Java  Program to Illustrate Use of Methods in a Class
================================ EOKW
--------------------------------
output:
$ javac Method java
$ java Method 

Result:14
Result:6
Result:40
Result:2 5
--------------------------------
public class Method
{
    void addition(int a,int b)
    {
        int c = a + b;
        System out println("Result:"+c);
    }
    void subtraction(int a,int b)
    {
        int c = a - b;
        System out println("Result:"+c);
    }
    void multiplication(int a,int b)
    {
        int c = a * b;
        System out println("Result:"+c);
    }
    void division(int a,int b)
    {
        double c =(double)a / b;
        System out println("Result:"+c);
    }
    public static void main(String args[])
    {
    Method obj = new Method();
        obj addition(10, 4);
        obj subtraction(10, 4);
        obj multiplication(10, 4);
        obj division(10, 4);
    }
}
 . 
*******************
Java  Program to Illustrate a Method without Parameters and without Return Type
================================ EOPN
Java  Program to Illustrate a Method without Parameters and without Return Type
================================ EOKW
--------------------------------
output:
$ javac Method_Demo java
$ java Method_Demo

enter the radius :3
area of the circle is:28 285715 sq units 
--------------------------------
public class Test
{
    void areacircle()
    {   
        System out print("enter the radius :");
        Scanner s = new Scanner(System in);
        float r = s nextFloat();
        float ar;
        ar = (r * r) * 22 / 7;
        System out println("area of the circle is : "+ar+" sq units ");
    }
}
class MethodDemo
{
    public static void main(String args[]) 
    {
        Test obj = new Test();
        obj areacircle();
    }
}
 . 
*******************
Java  Program to Illustrate a Method without Parameters and with Return Type
================================ EOPN
Java  Program to Illustrate a Method without Parameters and with Return Type
================================ EOKW
--------------------------------
output:
$ javac ReturnDemo java
$ java ReturnDemo

enter width : 10
enter height : 2
enter depth: 23
Volume is 460 0
--------------------------------
class Box 
{
    double width;
    double height;
    double depth;
    double volume() 
    {
        Scanner s = new Scanner(System in);
        System out print("enter width : ");
        double width = s nextDouble();
        System out print("enter height : ");
        double height = s nextDouble();
        System out print("enter depth: ");
        double depth = s nextDouble();
        return width * height * depth;
    }
}
class ReturnDemo 
{
    public static void main(String args[]) 
    {
        Box cuboid = new Box();
        double vol;
    vol = cuboid volume();
        System out println("Volume is " + vol);
    }
}
 . 
*******************
Java  Program to Illustrate a Method with 2 Parameters and without Return Type
================================ EOPN
Java  Program to Illustrate a Method with 2 Parameters and without Return Type
================================ EOKW
--------------------------------
output:
$ javac ParameterDemo java
$ java ParameterDemo

enter length : 3
enter breadth : 2
area of the rectangle is :6 0
--------------------------------
 . 
*******************
Java  Program to Illustrate Use of getChar() and split() Method
================================ EOPN
Java  Program to Illustrate Use of getChar() and split() Method
================================ EOKW
--------------------------------
output:
$ javac Split_getChar java
$ java Split_getChar

Sanfoundary
1000
Java
Programs
Usin getChar() method:
Sanfoundary
--------------------------------
public class Split_getChar
{
    public static void main(String args[]) 
    {
        String[] a;
        String b = "Sanfoundary 1000 Java Programs";
        a = b split(" ");
        for (int i = 0; i < a length; i++) 
        {
            System out println(a[i]);
        }
        System out println("Using getChar() method:");
        char c[]=new char[11];
        b getChars(0, 11, c, 0);
        for(int i=0;i<11;i++)
        {
            System out print(c[i]);
        }
    }
}
 . 
*******************
Java  Program to Check whether a String is a Palindrome
================================ EOPN
Java  Program to Check whether a String is a Palindrome
================================ EOKW
--------------------------------
output:
$ javac Palindrome java
$ java Palindrome

Enter the string you want to check:NeveroddorEVen
The string is palindrome 
--------------------------------
public class Palindrome
{
    public static void main(String args[])
    {
        String a, b = "";
        Scanner s = new Scanner(System in);
        System out print("Enter the string you want to check:");
        a = s nextLine();
        int n = a length();
        for(int i = n - 1; i >= 0; i--)
        {
            b = b + a charAt(i);
        }
        if(a equalsIgnoreCase(b))
        {
            System out println("The string is palindrome ");
        }
        else
        {
            System out println("The string is not palindrome ");
        }
    }
}
 . 
*******************
Java  Program to Create Strings and How to Use Some Important Methods of String Class
================================ EOPN
Java  Program to Create Strings and How to Use Some Important Methods of String Class
================================ EOKW
--------------------------------
output:
$ javac Important_Methods java
$ java Important_Methods

The length of the String str1 using length() is 5
The string after concatenation using concat() is HellofromJAVA
The character atindex 5 using charAt() is  f
The string after spliting using split() will be = AbCdEfGhIjKl and nOpQrStUvWxYz
--------------------------------
public class Important_Methods
{
    public static void main(String    a)
    {
        String str1 = "Hello";
        String str2 = "from";
        String str3 = "JAVA";
        int len = str1 length();
        System out println("The length of the String str1 using length() is "+len);
        String str4 = str1 concat(str2) concat(str3);
        System out println("The string after concatenation using concat() is " +str4);
        char c = str4 charAt(5);
        System out println("The character atindex 5 using charAt() is  " +c);
        String str5 = "AbCdEfGhIjKlMnOpQrStUvWxYz";
        String str6[]= str5 split("M");
        String part1 = str6[0];
        String part2 = str6[1];
        System out println("The string after spliting using split() will be = "+part1+" "+part2);
   }
}
 . 
*******************
Java  Program to Illustrate Use of Constructor
================================ EOPN
Java  Program to Illustrate Use of Constructor
================================ EOKW
--------------------------------
output:
$ javac ConstructorDemo java
$ java ConstructorDemo

Constructor without parameter
Volume is 1000 0
Constructor with parameter
Volume is 792 0
--------------------------------
public class Constructor
{
    double width;
    double height;
    double depth;
    Constructor() 
    {
    System out println("Constructor without parameter");
    width = 10;
    height = 10;
    depth = 10;
    }
    Constructor(int a, int b, int c) 
    {
    System out println("Constructor with parameter");
    width = a;
    height = b;
    depth = c;
    }
    double volume() 
    {
    return width * height * depth;
    }
}
class ConstructorDemo
{
    public static void main(String args[]) 
    {
    Constructor cuboid1 = new Constructor();
        double vol;
    vol = cuboid1 volume();
    System out println("Volume is " + vol);
    Constructor cuboid2 = new Constructor(8,11,9);
    vol = cuboid2 volume();
    System out println("Volume is " + vol);
    }
}
 . 
*******************
Java  Program to Illustrate Use of Chaining Constructor
================================ EOPN
Java  Program to Illustrate Use of Chaining Constructor
================================ EOKW
--------------------------------
output:
$ javac Constructor_Chaining java
$ java Constructor_Chaining

In default constructor
In single parameter constructor
In double parameter constructor
--------------------------------
public class Constructor_Chaining
{
        public Constructor_Chaining
        {
            System out println("In default constructor");
        }
        public Constructor_Chaining(int i)
        {
            this();
            System out println("In single parameter constructor");
        }
        public Constructor_Chaining(int i,int j)
        {
            this(j);
            System out println("In double parameter constructor");
        }
        public static void main(String a[])
        {
           Constructor_Chaining obj = new Constructor_Chaining(11,12);
        }
}
 . 
*******************
Java  Program to Create the Object for Class and to Assign Value in the Object Using Constructor
================================ EOPN
Java  Program to Create the Object for Class and to Assign Value in the Object Using Constructor
================================ EOKW
--------------------------------
output:
$ javac Demo java
$ java Demo

a:5
b:6
New a:15
New b:10
c:25
--------------------------------
public class Demo
{
    int a,b,c;
    Demo()
    {
         a = 5;
         b = 6;
    }
    void change()
    {
        a = 15;
        b = 10;
        c = a + b;
    }
    public static void main(String[] args) 
    {
        Demo obj1 = new Demo();
        System out println("a:"+obj1 a);
        System out println("b:"+obj1 b);
        obj1 change();
        System out println("New a:"+obj1 a);
        System out println("New b:"+obj1 b);
        System out println("c:"+obj1 c);
    }
}
 . 
*******************
Java  Program to Allocate and Initialize Super Class Members Using Constructor
================================ EOPN
Java  Program to Allocate and Initialize Super Class Members Using Constructor
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child 

the super class constructor
the super class method 
the sum is 32
the sub class constructor 
10
--------------------------------
 class Parent
 {
     Parent(int a, int b)
     {
         System out println(" the super class constructor");
          int z = a + b;
         System out println("the super class method ");
         System out println("the sum is "+z);
     }
 }
public class Child extends Parent
{
    Child(int x)
    {
        super(12, 20);
        System out println("the sub class constructor ");
        System out println(x);
    }
    public static void main(String     a)
     {
        Child obj = new Child(10);
     }
}
 . 
*******************
Java  Program Which has 2 Classes Which Initializes a String in Its Constructor 
================================ EOPN
Java  Program Which has 2 Classes Which Initializes a String in Its Constructor 
================================ EOKW
--------------------------------
output:
$ javac String_Initialise1 java
$ java String_Initialise1

Base Class Constructor
Derived Class Constructor
the strings initialised in the constructors of Base and Derived classes are :
String from Base Class and String from Derived Class
--------------------------------
class String_Initialise
{
    String a, b;
    public String_Initialise()
    {
        System out println("Base Class Constructor");
        a = "String from Base Class";
    }
}
public class String_Initialise1 extends String_Initialise
{
   public String_Initialise1()
    {
        System out println("Derived Class Constructor");
        b = "String from Derived Class";
    }
    public static void main(String    arg) 
    {
        String_Initialise1 obj = new String_Initialise1();
        System out println("the strings initialised in the constructors of Base and Derived classes are :");
        System out println(obj a +" and "+obj b);
    }
}
 . 
*******************
Java  Program to Illustrates Use of Chaining Constructor
================================ EOPN
Java  Program to Illustrates Use of Chaining Constructor
================================ EOKW
--------------------------------
output:
$ javac ConstructorChaining java
$ java ConstructorChaining

Parameterized (1 parameter) constructor of class 
The value of x is 20
Default constructor of class 
Parameterized (2 parameters) constructor of class 
The  value of x and y is  11and 12  The sum of x and y is 23
--------------------------------
public class ConstructorChaining
{
    ConstructorChaining()
    {
        this(20);
        System out println("Default constructor of class ");
    }
    ConstructorChaining(int x)
    {
        System out println("Parameterized (1 parameter) constructor of class ");
        System out println("The value of x is "+x);
    }
    ConstructorChaining(int x, int y)
    {
        this();
        System out println("Parameterized (2 parameters) constructor of class ");
        System out println("The  value of x and y is  " + x + "and " + y + "  " + "The sum of x and y is " + (x + y) );
    }
    public static void main(String    a)
    {
        ConstructorChaining(11,12);
    }
}
 . 
*******************
Java  Program to Initialize the Instance Variables of Employee Class, Using Parameterized Constructor
================================ EOPN
Java  Program to Initialize the Instance Variables of Employee Class, Using Parameterized Constructor
================================ EOKW
--------------------------------
output:
$ javac Palindrome java
$ java Palindrome

Enter the string you want to check:NeveroddorEVen
The string is palindrome 
--------------------------------
public class Palindrome
{
    public static void main(String args[])
    {
        String a, b = "";
        Scanner s = new Scanner(System in);
        System out print("Enter the string you want to check:");
        a = s nextLine();
        int n = a length();
        for(int i = n - 1; i >= 0; i--)
        {
            b = b + a charAt(i);
        }
        if(a equalsIgnoreCase(b))
        {
            System out println("The string is palindrome ");
        }
        else
        {
            System out println("The string is not palindrome ");
        }
    }
}
 . 
*******************
Java  Program to Access the Super Class Method and Instance Variable Without Using Super Keyword from Sub Class
================================ EOPN
Java  Program to Access the Super Class Method and Instance Variable Without Using Super Keyword from Sub Class
================================ EOKW
--------------------------------
output:
$ javac Sub java
$ java Sub

a:5
b:6
Result:11
--------------------------------
class Super
{
    int a = 5, b = 6;
    int add()
    {
        int c = a + b;
        return c;
    }
}
public class Sub extends Super
{
    void show()
    {
        System out println("a:"+a);
        System out println("b:"+b);
        System out println("Result:"+add());
    }
    public static void main(String[] args)
    {
        Sub obj = new Sub();
        obj show();
    }
}
 . 
*******************
Java  Program to Access the Super Class Method and Instance Variable Using Super Keyword from Sub Class
================================ EOPN
Java  Program to Access the Super Class Method and Instance Variable Using Super Keyword from Sub Class
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child

Instance Variable of Parent class using Super Keyword :5
Instance variable of Child class :9
Method of parent class using Super Keyword
Method of Child class
--------------------------------
class Parent
{
   int x = 5;
   void show()
   {
       System out println("Method of parent class using Super Keyword");
   }
}
class Child extends Parent
{
   int x = 9;
   void show()
   {
       System out println("Instance Variable of Parent class using Super Keyword :"+super x);
       System out println("Instance variable of Child class :"+x);
       super show();
       System out println("Method of Child class ");
   }
   public static void main(String    a)
   {
    Child ob = new Child();
    ob show();
   }
}
 . 
*******************
Java  Program to Prove that the Default Constructor of the Super Class is Available to Sub Class by Default
================================ EOPN
Java  Program to Prove that the Default Constructor of the Super Class is Available to Sub Class by Default
================================ EOKW
--------------------------------
output:
$ javac Sub java
$ java Sub

super class default constructor
sub class default constructor
--------------------------------
class Sup
{
    static int a, b;
    Sup()
    {
       System out println("super class default constructor");
    }
}
public class Sub extends Sup
{
    Sub()
    {
        System out println("sub class default constructor");
    }
    public static void main(String[] args)
    {
       new Sub();
    }
}
 . 
*******************
Java  Program to Understand that the Parameterized Constructor of the Super Class can be called from Sub Class Using super()
================================ EOPN
Java  Program to Understand that the Parameterized Constructor of the Super Class can be called from Sub Class Using super()
================================ EOKW
--------------------------------
output:
$ javac Parametrized_Constructor_Demo java
$ java Parametrized_Constructor_Demo

Enter value of a:32
Enter value of b:23
Result:55
--------------------------------
import java util Scanner;
class sup1
{
    int z;
    sup1(int x, int y)
    {
        z = x + y;
        System out println("Result:"+z);
    }
}
public class Parametrized_Constructor_Demo extends sup1
{
    Parametrized_Constructor_Demo(int x, int y)
    {
        super(x , y);
    }
    public static void main(String[] args) 
    {
        Scanner s = new Scanner(System in);
        System out print("Enter value of a:");
        int a = s nextInt();
        System out print("Enter value of b:");
        int b = s nextInt();
        Parametrized_Constructor_Demo obj = new Parametrized_Constructor_Demo(a,b);
    }
}
 . 
*******************
Java  Program to Test whether a Static Method can Access the Static or Non-Static Variable
================================ EOPN
Java  Program to Test whether a Static Method can Access the Static or Non-Static Variable
================================ EOKW
--------------------------------
output:
$ javac StaticMethod java
$ java StaticMethod

static variable:42
Exception in thread "main" java lang RuntimeException: Uncompilable source code - non-static variable b cannot be referenced from a static context
--------------------------------
public class StaticMethod 
{
    static int a = 42;
    int b = 99;
    public static void main (String args[])
    {
        System out println("static variable:" + a);
        System out println("non static variable:" + b);
    }
}
 . 
*******************
Java  Program to Demonstrate Usage of an Instance Variable x in the Test Class
================================ EOPN
Java  Program to Demonstrate Usage of an Instance Variable x in the Test Class
================================ EOKW
--------------------------------
output:
$ javac Test java
$ java Test

17
--------------------------------
public class Test
{
    int x = 17;
    public static void main(String   a)
    {
        //System out println(x);  Error : non-static variable x cannot be referenced from a static context
        // non static variable can be called only after making objects
        Test ob = new Test();
        System out println(ob x);
    }
}
 . 
*******************
Java  Program to Demonstrate Usage of a Static Variable x in the Test Class
================================ EOPN
Java  Program to Demonstrate Usage of a Static Variable x in the Test Class
================================ EOKW
--------------------------------
output:
$ javac Test java
$ java Test

17
17
--------------------------------
public class Test
{
    static int x = 17;
    public static void main(String   a)
    {
        System out println(x);                  //static variable can be called directly
        System out println(Test x);   //static variable can be called with class its name
    }
}
 . 
*******************
Java  Program to Check Whether Which One is Executed First, Static Block or the Static Method
================================ EOPN
Java  Program to Check Whether Which One is Executed First, Static Block or the Static Method
================================ EOKW
--------------------------------
output:
$ javac Demo java
$ java Demo

First static block
Second static block and Static Variable
Static method
Third static block
Constructor
Static method2
--------------------------------
public class Demo
{   
    static 
    {
        System out println("First static block");
    }

    public Demo()
    {
        System out println("Constructor");
    }

    public static String staticString = "Static Variable";

    static 
    {
        System out println("Second static block and "+ staticString);
    }
    static 
    {
        staticMethod();
        System out println("Third static block");
    }

    public static void staticMethod() 
    {
        System out println("Static method");
    }

    public static void staticMethod2() 
    {
        System out println("Static method2");
    }
    public static void main(String[] args)
    {
        Demo obj = new Demo();
        obj staticMethod2();
    }    
}
 . 
*******************
Java  Program to Illustrate the Use of HashCode() Method
================================ EOPN
Java  Program to Illustrate the Use of HashCode() Method
================================ EOKW
--------------------------------
output:
$ javac HashDemo java
$ java HashDemo

In hashcode
In hashcode
In hashcode
In hashcode
Hashcode of the key: 1982479637
In hashcode
In equals
Value from map: Banana
--------------------------------
import java util HashMap;
public class HashDemo
{
   public static void main(String a[])
   {
        HashMap<Price, String> hm = new HashMap<Price, String>();
        hm put(new Price("Banana", 20), "Banana");
        hm put(new Price("Apple", 40), "Apple");
        hm put(new Price("Orange", 30), "Orange");   //creating new object to use as key to get value
        Price key = new Price("Banana", 20);
        System out println("Hashcode of the key: "+key hashCode());
        System out println("Value from map: "+hm get(key));
    }
}
class Price
{
    private String item;
    private int price;
    public Price(String itm, int pr)
    {
        this item = itm;
        this price = pr;
    }
    public int hashCode()
    {
        System out println("In hashcode");
        int hashcode = 0;
        hashcode = price*20;
        hashcode += item hashCode();
        return hashcode;
    }
    public boolean equals(Object obj)
    {
        System out println("In equals");
        if (obj instanceof Price)
        {
            Price pp = (Price) obj;
            return (pp item equals(this item) && pp price == this price);
        }
        else
        {
            return false;
        }
    }
    public String getItem()
    {
        return item;
    }
    public void setItem(String item)
    {
        this item = item;
    }
    public int getPrice()
    {
        return price;
    }
    public void setPrice(int price)
    {
        this price = price;
    }
    public String toString()
    {
        return "item: "+item+"  price: "+price;
    }
}
 . 
*******************
Java  Program to Make Shape as an Interface and Implement it Using Circle and Rectangle Class
================================ EOPN
Java  Program to Make Shape as an Interface and Implement it Using Circle and Rectangle Class
================================ EOKW
--------------------------------
output:
$ javac Demo java
$ java  Demo

Area of circle:78 5
Area of rectangle:24 0
--------------------------------
interface Shape
{
    void input();
    void area();
}
class Circle implements Shape
{
    int r = 0;
    double pi = 3 14, ar = 0;
    @Override
    public void input()
    {
        r = 5;
    }
    @Override
    public void area()
    {
        ar = pi * r * r;
        System out println("Area of circle:"+ar);
    }
}
class Rectangle extends Circle
{
    int l = 0, b = 0;
    double ar;
    public void input()
    {
        super input();
        l = 6;
        b = 4;
    }
    public void area()
    {
        super area();
        ar = l * b;
        System out println("Area of rectangle:"+ar);
    }
}
public class Demo
{
    public static void main(String[] args)
    {
        Rectangle obj = new Rectangle();
        obj input();
        obj area();
    }
}
 . 
*******************
Java  Program to Split into Pieces Wherever a Space is Found 
================================ EOPN
Java  Program to Split into Pieces Wherever a Space is Found 
================================ EOKW
--------------------------------
output:
$ javac Split_Demo java
$ java Split_Demo

The string after spliting is Hello and Java
--------------------------------
public class Split_Demo
{
    public static void main(String    a)
    {
       String s1 = "HelloJava from JavaGuy";
       String s2[] = s1 split(" ");
       String part1 = s2[0];
       String part2 = s2[1];
       String part3 = s2[2];
        System out println("The string after spliting is "+part1+ " and "+part2);
    }
}
 . 
*******************
Java  Program to Create the Outer Class BankAcct and Inner Class Interest
================================ EOPN
Java  Program to Create the Outer Class BankAcct and Inner Class Interest
================================ EOKW
--------------------------------
output:
$ javac InnerClassDemo java
$ java InnerClassDemo

Interest : 16 Rs
--------------------------------
class BankAcct 
{
    int principal = 200, rate = 4, time = 2;
    void test() 
    {
        Interest inner_obj = new Interest();
        inner_obj display();
    }
    class Interest 
    {
        void display() 
        {
            int si = (principal * rate * time) / 100;
            System out println("Interest : " + si + " Rs");
        }
    }
}
public class InnerClassDemo 
{
    public static void main(String args[]) 
    {
        BankAcct outer_obj = new BankAcct();
        outer_obj test();
    }
}
 . 
*******************
Java  Program to Interchange Two Employee Objects by Passing them to Swap() Method
================================ EOPN
Java  Program to Interchange Two Employee Objects by Passing them to Swap() Method
================================ EOKW
--------------------------------
output:
$ javac Swap_Demo java
$ java Swap_Demo

Before swapping:
Employee1:this is A
Employee2:this is B
After swapping:
Employee1: this is B
Employee2: this is A
--------------------------------
public class Swap_Demo
{
    static String emp1, emp2;
    Swap_Demo()
    {
        emp1 = "this is A";
        emp2 = "this is B";
    }
    void swap(String x,String y)
    {
        String res;
        res = x;
        x = y;
        y = res;
        System out println("Employee1: "+x);
        System out println("Employee2: "+y);
    }
    public static void main(String[] args)
    {
        Swap_Demo obj = new Swap_Demo();
        System out println("Before swapping:");
        System out println("Employee1:"+emp1);
        System out println("Employee2:"+emp2);
        System out println("After swapping:");
        obj swap(emp1,emp2);
    }
}
 . 
*******************
Java  Program to Handle the Exception Using Try and Multiple Catch Block
================================ EOPN
Java  Program to Handle the Exception Using Try and Multiple Catch Block
================================ EOKW
--------------------------------
output:
$ javac Try_Catch java
$ java Try_Catch

Enter a:4
Enter b:5
Enter c:6
0
4
java io FileNotFoundException: B:/myfile txt (No such file or directory)
--------------------------------
import java io FileInputStream;
import java util Scanner;

public class Try_Catch 
{
    public static void main(String[] args) 
    {
        int a=5,b=0,c,d,f;
        try
        {
            Scanner s=new Scanner(System in);
            System out print("Enter a:");
            a=s nextInt();
            System out print("Enter b:");
            b=s nextInt();
            System out print("Enter c:");
            c=s nextInt();
            d=a/b;
            System out println(d);
            f=a%c;
            System out println(f);
            FileInputStream fis = null;
            /*This constructor FileInputStream(File filename)
           * throws FileNotFoundException which is a checked
           * exception*/
            fis = new FileInputStream("B:/myfile txt"); 
            int k; 
            /*Method read() of FileInputStream class also throws 
           * a checked exception: IOException*/
            while(( k = fis read() ) != -1) 
            { 
        System out print((char)k); 
            }    
            /*The method close() closes the file input stream
           * It throws IOException*/
            fis close();    
        }
        catch(IndexOutOfBoundsException e)
        {
            System out println(e);
        }
        catch(NullPointerException e)
        {
            System out println(e);
        }
        catch(ArithmeticException e)
        {
            System out println(e);
        }
        catch(Exception e)
        {
            System out println(e);
        }
    }
}
 . 
*******************
Java  Program to Handle the User Defined Exception Using Throw Keyword
================================ EOPN
Java  Program to Handle the User Defined Exception Using Throw Keyword
================================ EOKW
--------------------------------
output:
$ javac User_Defined_Exception java
$ java User_Defined_Exception

Enter Amount:-5
Invalid Amount
--------------------------------
import java util Scanner;

class NegativeAmtException extends Exception
{
    String msg;
    NegativeAmtException(String msg)
    {
        this msg=msg;
    }
    public String toString()
    {
        return msg;
    }
}
public class User_Defined_Exception 
{
    public static void main(String[] args)
    {
        Scanner s=new Scanner(System in);
        System out print("Enter Amount:");
        int a=s nextInt();
        try
        {
            if(a<0)
            {
                throw new NegativeAmtException("Invalid Amount");
            }
            System out println("Amount Deposited");
        }
        catch(NegativeAmtException e)
        {
            System out println(e);
        }
    }
}
 . 
*******************
Java  Program to Use This Keyword in Inheritance Class
================================ EOPN
Java  Program to Use This Keyword in Inheritance Class
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child

The base class data member (x)by Super Keyword :19
The child class data member :20
--------------------------------
class Base 
{
  int x = 19;
}

class Child extends Base 
{
    int x = 20;
    void shows() 
    {
        System out println("The base class data member (x) by Super Keyword :" + super x);
        System out println("The child class data member :" + x);

    }
    public static void main(String    a) 
    {
        Child obj = new Child();
        obj shows();       
    }
}
 . 
*******************
Java  Program to Use Super Keyword in Inheritance Class
================================ EOPN
Java  Program to Use Super Keyword in Inheritance Class
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child

Child Class-21
Base1 class-20
Accessing value of data member via This Keyword
Base2 class-19
--------------------------------
class Base1
{
  int x = 19;
}
class Base2 extends Base1
{
  int x = 20;
}
class Child extends Base2
{
     int x = 21;
     void show()
     {
        System out println("Child Class-"+x);
        System out println("Base1 class-"+super x);
        System out println("Accessing value of data member via This Keyword");
        System out println("Base2 class-"+(((Base1)this) x));
     }
    public static void main(String    a)
    {
       Child obj = new Child();
        obj show();
    }
}
 . 
*******************
Java  Program to Show Method Overriding in a Class Using Inheritance Class
================================ EOPN
Java  Program to Show Method Overriding in a Class Using Inheritance Class
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child

Child class method
--------------------------------
class Base
{
    void showme()
    {
        System out println(" Base class method");
    }
}
 class Child extends Base
{
    void showme()
    {
      System out println("Child class method");
    }
    public static void main(String    a)
    {
       Child obj = new Child();
       obj showme();
    }
}
 . 
*******************
Java  Program to Access Super Class in a Method Overriding 
================================ EOPN
Java  Program to Access Super Class in a Method Overriding 
================================ EOKW
--------------------------------
output:
$ javac Child java
$ java Child

Base class method via Super keyword
Child class method
--------------------------------
class Base
{
    void get()
    {
        System out println(" Base class method via Super keyword");
    }
}
class Child extends Base
{
    void get()
    {
       super get();
       System out println("Child class method");
    }
    public static void main(String    a)
    {
       Child obj1 = new Child();
       obj1 get();
    }
}
 . 
*******************
Java  Program that Show the Implementation of Interface
================================ EOPN
Java  Program that Show the Implementation of Interface
================================ EOKW
--------------------------------
output:
$ javac Interface_Implementation java
$ java Interface_Implementation

Enter length:6
Enter breadth:7
Area:42
--------------------------------
import java util Scanner;

interface area
{
    public void dimensions();
    public void area();
}
public class Interface_Implementation implements area
{
    int length,breadth,area;
    public void dimensions() 
    {
        Scanner s=new Scanner(System in);
        System out print("Enter length:");
        length=s nextInt();
        System out print("Enter breadth:");
        breadth=s nextInt();
    }
    public void area() 
    {
        area=length*breadth;
        System out print("Area:"+area);
    }
    public static void main(String[] args) 
    {
        Interface_Implementation obj=new Interface_Implementation();
        obj dimensions();
        obj area();
    }
}
 . 
*******************
